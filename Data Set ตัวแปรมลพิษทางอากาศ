{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNpICuNCJGrgbG1IM94t6Yx",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Wilanth/Project/blob/main/Data%20Set%20%E0%B8%95%E0%B8%B1%E0%B8%A7%E0%B9%81%E0%B8%9B%E0%B8%A3%E0%B8%A1%E0%B8%A5%E0%B8%9E%E0%B8%B4%E0%B8%A9%E0%B8%97%E0%B8%B2%E0%B8%87%E0%B8%AD%E0%B8%B2%E0%B8%81%E0%B8%B2%E0%B8%A8\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn.impute import KNNImputer"
      ],
      "metadata": {
        "id": "K6JgQzHpUne4"
      },
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "##link with google drive"
      ],
      "metadata": {
        "id": "aUOCuk-bOhJY"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "# Mount Google Drive\n",
        "drive.mount('/content/drive')  # mount =  เชื่อมไดร์ฟ"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0tmjQ0LAVAhh",
        "outputId": "c960317e-df33-48d7-8dbe-99322549c41a"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##หาค่าสูญหายด้วยตัวแปรปริมาณมลพิษทางอากาศและตัวแปรในปัจจัยที่ส่งผลต่อมลพิษทางอากาศ"
      ],
      "metadata": {
        "id": "d23ynzg3NYW8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# เข้าถึงไฟล์ใน Google Drive\n",
        "data = pd.read_excel('/content/drive/MyDrive/Project เด็กอ.บี/Data Set เพิ่มฤดูกาล.xlsx')\n",
        "data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 325
        },
        "id": "lnCU7bLtVI7x",
        "outputId": "52709c56-fe2e-466f-951a-bf478410fa3e"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2    CO   O3 PM10 PM2.5  จำนวน\\nโรงงาน  \\\n",
              "0          NaN  NaN  NaN   NaN  NaN  NaN   NaN            NaN   \n",
              "1       กระบี่    -    -     -    -    -     -         2163.0   \n",
              "2    กาญจนบุรี    0    4     -   36   41    15         6306.0   \n",
              "3    กาฬสินธุ์    -    -     -    -    -     -         5599.0   \n",
              "4  \\tกำแพงเพชร    1    6  0.43   18   25    13         3307.0   \n",
              "\n",
              "   ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  ... ฤดูฝน ฤดูหนาว  \\\n",
              "0                 NaN               NaN  ...   NaN     NaN   \n",
              "1              213.02          201080.0  ...  27.6      27   \n",
              "2           605710.18          359348.0  ...  28.3    26.4   \n",
              "3           903434.95          322190.0  ...  28.2      25   \n",
              "4            76728.47          285190.0  ...  28.4    26.1   \n",
              "\n",
              "  ปริมาณการใช้\\nไฟฟ้าครัวเรือน ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
              "0                          NaN                       NaN   \n",
              "1                    346833979                 480646937   \n",
              "2                    645373570                1332767206   \n",
              "3                    383804304                 453890163   \n",
              "4                    396833854                 658647531   \n",
              "\n",
              "  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
              "0                             NaN                      NaN   \n",
              "1                       211316.80                1265888.0   \n",
              "2                       389608.80                1974241.0   \n",
              "3                       180626.15                1487255.0   \n",
              "4                       194569.75                1783491.0   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
              "0                           NaN                           NaN   \n",
              "1                       37108.0                         495.0   \n",
              "2                       99541.0                         657.0   \n",
              "3                       66852.0                         735.0   \n",
              "4                       97924.0                         514.0   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                      NaN                     NaN  \n",
              "1                    58280                   10.78  \n",
              "2                   109475                  525.13  \n",
              "3                    90050                   42.18  \n",
              "4                    20000                   11.34  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e4d4470f-4867-4a1a-a16b-4ff25288e587\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>2163.0</td>\n",
              "      <td>213.02</td>\n",
              "      <td>201080.0</td>\n",
              "      <td>...</td>\n",
              "      <td>27.6</td>\n",
              "      <td>27</td>\n",
              "      <td>346833979</td>\n",
              "      <td>480646937</td>\n",
              "      <td>211316.80</td>\n",
              "      <td>1265888.0</td>\n",
              "      <td>37108.0</td>\n",
              "      <td>495.0</td>\n",
              "      <td>58280</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>-</td>\n",
              "      <td>36</td>\n",
              "      <td>41</td>\n",
              "      <td>15</td>\n",
              "      <td>6306.0</td>\n",
              "      <td>605710.18</td>\n",
              "      <td>359348.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.3</td>\n",
              "      <td>26.4</td>\n",
              "      <td>645373570</td>\n",
              "      <td>1332767206</td>\n",
              "      <td>389608.80</td>\n",
              "      <td>1974241.0</td>\n",
              "      <td>99541.0</td>\n",
              "      <td>657.0</td>\n",
              "      <td>109475</td>\n",
              "      <td>525.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>5599.0</td>\n",
              "      <td>903434.95</td>\n",
              "      <td>322190.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.2</td>\n",
              "      <td>25</td>\n",
              "      <td>383804304</td>\n",
              "      <td>453890163</td>\n",
              "      <td>180626.15</td>\n",
              "      <td>1487255.0</td>\n",
              "      <td>66852.0</td>\n",
              "      <td>735.0</td>\n",
              "      <td>90050</td>\n",
              "      <td>42.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0.43</td>\n",
              "      <td>18</td>\n",
              "      <td>25</td>\n",
              "      <td>13</td>\n",
              "      <td>3307.0</td>\n",
              "      <td>76728.47</td>\n",
              "      <td>285190.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.4</td>\n",
              "      <td>26.1</td>\n",
              "      <td>396833854</td>\n",
              "      <td>658647531</td>\n",
              "      <td>194569.75</td>\n",
              "      <td>1783491.0</td>\n",
              "      <td>97924.0</td>\n",
              "      <td>514.0</td>\n",
              "      <td>20000</td>\n",
              "      <td>11.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4d4470f-4867-4a1a-a16b-4ff25288e587')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e4d4470f-4867-4a1a-a16b-4ff25288e587 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e4d4470f-4867-4a1a-a16b-4ff25288e587');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-cc824e28-b8eb-46f0-8561-13c3add88c19\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cc824e28-b8eb-46f0-8561-13c3add88c19')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-cc824e28-b8eb-46f0-8561-13c3add88c19 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data"
            }
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.shape # ดูขนาด กี่เเถวกี่หลัก"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TzpziTuKPpob",
        "outputId": "268dab96-06f4-47a4-9832-2703641fe62a"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(77, 22)"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงค่าที่เป็น '-' หรือ '\\t' ให้เป็น NaN\n",
        "data_cleaned = data.replace(['-', '\\t', ' '], np.nan)\n",
        "data_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 359
        },
        "id": "MuCi5psZhNjZ",
        "outputId": "bfcd1436-5759-4a54-d23d-c78129e8760c"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-6-111714f3f877>:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
            "  data_cleaned = data.replace(['-', '\\t', ' '], np.nan)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2    CO    O3  PM10  PM2.5  จำนวน\\nโรงงาน  \\\n",
              "0          NaN  NaN  NaN   NaN   NaN   NaN    NaN            NaN   \n",
              "1       กระบี่  NaN  NaN   NaN   NaN   NaN    NaN         2163.0   \n",
              "2    กาญจนบุรี  0.0  4.0   NaN  36.0  41.0   15.0         6306.0   \n",
              "3    กาฬสินธุ์  NaN  NaN   NaN   NaN   NaN    NaN         5599.0   \n",
              "4  \\tกำแพงเพชร  1.0  6.0  0.43  18.0  25.0   13.0         3307.0   \n",
              "\n",
              "   ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  ...  ฤดูฝน  ฤดูหนาว  \\\n",
              "0                 NaN               NaN  ...    NaN      NaN   \n",
              "1              213.02          201080.0  ...   27.6     27.0   \n",
              "2           605710.18          359348.0  ...   28.3     26.4   \n",
              "3           903434.95          322190.0  ...   28.2     25.0   \n",
              "4            76728.47          285190.0  ...   28.4     26.1   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
              "0                           NaN                        NaN   \n",
              "1                   346833979.0               4.806469e+08   \n",
              "2                   645373570.0               1.332767e+09   \n",
              "3                   383804304.0               4.538902e+08   \n",
              "4                   396833854.0               6.586475e+08   \n",
              "\n",
              "   ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
              "0                              NaN                       NaN   \n",
              "1                        211316.80                 1265888.0   \n",
              "2                        389608.80                 1974241.0   \n",
              "3                        180626.15                 1487255.0   \n",
              "4                        194569.75                 1783491.0   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
              "0                           NaN                           NaN   \n",
              "1                       37108.0                         495.0   \n",
              "2                       99541.0                         657.0   \n",
              "3                       66852.0                         735.0   \n",
              "4                       97924.0                         514.0   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                      NaN                     NaN  \n",
              "1                  58280.0                   10.78  \n",
              "2                 109475.0                  525.13  \n",
              "3                  90050.0                   42.18  \n",
              "4                  20000.0                   11.34  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8dbda813-9c95-478c-8cbb-bfc2fa18866d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2163.0</td>\n",
              "      <td>213.02</td>\n",
              "      <td>201080.0</td>\n",
              "      <td>...</td>\n",
              "      <td>27.6</td>\n",
              "      <td>27.0</td>\n",
              "      <td>346833979.0</td>\n",
              "      <td>4.806469e+08</td>\n",
              "      <td>211316.80</td>\n",
              "      <td>1265888.0</td>\n",
              "      <td>37108.0</td>\n",
              "      <td>495.0</td>\n",
              "      <td>58280.0</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>15.0</td>\n",
              "      <td>6306.0</td>\n",
              "      <td>605710.18</td>\n",
              "      <td>359348.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.3</td>\n",
              "      <td>26.4</td>\n",
              "      <td>645373570.0</td>\n",
              "      <td>1.332767e+09</td>\n",
              "      <td>389608.80</td>\n",
              "      <td>1974241.0</td>\n",
              "      <td>99541.0</td>\n",
              "      <td>657.0</td>\n",
              "      <td>109475.0</td>\n",
              "      <td>525.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>5599.0</td>\n",
              "      <td>903434.95</td>\n",
              "      <td>322190.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.2</td>\n",
              "      <td>25.0</td>\n",
              "      <td>383804304.0</td>\n",
              "      <td>4.538902e+08</td>\n",
              "      <td>180626.15</td>\n",
              "      <td>1487255.0</td>\n",
              "      <td>66852.0</td>\n",
              "      <td>735.0</td>\n",
              "      <td>90050.0</td>\n",
              "      <td>42.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>1.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.43</td>\n",
              "      <td>18.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>13.0</td>\n",
              "      <td>3307.0</td>\n",
              "      <td>76728.47</td>\n",
              "      <td>285190.0</td>\n",
              "      <td>...</td>\n",
              "      <td>28.4</td>\n",
              "      <td>26.1</td>\n",
              "      <td>396833854.0</td>\n",
              "      <td>6.586475e+08</td>\n",
              "      <td>194569.75</td>\n",
              "      <td>1783491.0</td>\n",
              "      <td>97924.0</td>\n",
              "      <td>514.0</td>\n",
              "      <td>20000.0</td>\n",
              "      <td>11.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8dbda813-9c95-478c-8cbb-bfc2fa18866d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8dbda813-9c95-478c-8cbb-bfc2fa18866d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8dbda813-9c95-478c-8cbb-bfc2fa18866d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bf866dd6-4ae3-41bf-bc0f-b30405131d63\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bf866dd6-4ae3-41bf-bc0f-b30405131d63')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bf866dd6-4ae3-41bf-bc0f-b30405131d63 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data_cleaned"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ตรวจสอบว่าคอลัมน์ใดมีค่าสูญหาย\n",
        "missing_columns = data_cleaned.columns[data_cleaned.isnull().any()]\n",
        "print(\"คอลัมน์ที่มีค่าสูญหาย:\", missing_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YuEzh4GahZE6",
        "outputId": "54625fda-480f-4b92-b2d0-e444c6ca667d"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "คอลัมน์ที่มีค่าสูญหาย: Index(['จังหวัด', 'SO2', 'NO2', 'CO', 'O3', 'PM10', 'PM2.5', 'จำนวน\\nโรงงาน',\n",
            "       'ปริมาณกาก\\nของเสีย', 'จำนวน\\nครัวเรือน', 'อุณหภูมิ', 'ฤดูร้อน',\n",
            "       'ฤดูฝน', 'ฤดูหนาว', 'ปริมาณการใช้\\nไฟฟ้าครัวเรือน',\n",
            "       'ปริมาณการใช้\\nไฟฟ้ากิจการ', 'ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ',\n",
            "       'จำนวนรถตาม\\nกฎหมายรถยนต์', 'จำนวนรถตาม\\nกฎหมายขนส่งทางบก',\n",
            "       'ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น', 'ปริมาณขยะมูลฝอย\\nตกค้าง',\n",
            "       'ปริมาณพื้นที่\\nสีเขียว'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# เลือกเฉพาะคอลัมน์ที่เป็นตัวเลขสำหรับการแทนค่าสูญหาย\n",
        "numeric_data = data_cleaned.select_dtypes(include=[np.number])\n",
        "print(numeric_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kSO2g_RHLeRU",
        "outputId": "dd3e3fdc-3682-4661-c6af-b8906c70ee90"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    SO2  NO2    CO    O3  PM10  PM2.5  จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  \\\n",
            "0   NaN  NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "1   NaN  NaN   NaN   NaN   NaN    NaN         2163.0              213.02   \n",
            "2   0.0  4.0   NaN  36.0  41.0   15.0         6306.0           605710.18   \n",
            "3   NaN  NaN   NaN   NaN   NaN    NaN         5599.0           903434.95   \n",
            "4   1.0  6.0  0.43  18.0  25.0   13.0         3307.0            76728.47   \n",
            "..  ...  ...   ...   ...   ...    ...            ...                 ...   \n",
            "72  NaN  NaN   NaN   NaN   NaN    NaN         1231.0           371602.59   \n",
            "73  1.0  6.0  0.64  24.0  31.0   19.0        10661.0             2760.01   \n",
            "74  0.0  7.0  0.35  24.0  41.0   23.0         1651.0              148.67   \n",
            "75  0.0  8.0  0.39  23.0  34.0   18.0         1065.0              155.70   \n",
            "76  3.0  6.0  0.30  27.0  32.0   19.0        10625.0           176222.76   \n",
            "\n",
            "    จำนวน\\nครัวเรือน  อุณหภูมิ  ...  ฤดูฝน  ฤดูหนาว  \\\n",
            "0                NaN       NaN  ...    NaN      NaN   \n",
            "1           201080.0     27.45  ...   27.6     27.0   \n",
            "2           359348.0     27.75  ...   28.3     26.4   \n",
            "3           322190.0     26.70  ...   28.2     25.0   \n",
            "4           285190.0     27.70  ...   28.4     26.1   \n",
            "..               ...       ...  ...    ...      ...   \n",
            "72          125118.0     25.90  ...   27.3     24.3   \n",
            "73          548525.0     26.90  ...   28.4     25.1   \n",
            "74          175738.0     27.10  ...   29.0     26.4   \n",
            "75          129514.0     29.30  ...   29.1     27.1   \n",
            "76          642015.0     27.00  ...   28.1     25.6   \n",
            "\n",
            "    ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
            "0                            NaN                        NaN   \n",
            "1                    346833979.0               4.806469e+08   \n",
            "2                    645373570.0               1.332767e+09   \n",
            "3                    383804304.0               4.538902e+08   \n",
            "4                    396833854.0               6.586475e+08   \n",
            "..                           ...                        ...   \n",
            "72                   127969544.0               1.415715e+08   \n",
            "73                           NaN                        NaN   \n",
            "74                   259438532.0               2.242610e+08   \n",
            "75                   193761157.0               1.498977e+08   \n",
            "76                   791639963.0               8.946301e+08   \n",
            "\n",
            "    ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
            "0                               NaN                       NaN   \n",
            "1                         211316.80                 1265888.0   \n",
            "2                         389608.80                 1974241.0   \n",
            "3                         180626.15                 1487255.0   \n",
            "4                         194569.75                 1783491.0   \n",
            "..                              ...                       ...   \n",
            "72                         79757.80                  646113.0   \n",
            "73                        755528.11                 3498893.0   \n",
            "74                        117704.91                 1318596.0   \n",
            "75                         73365.20                  892109.0   \n",
            "76                        408692.16                 3789170.0   \n",
            "\n",
            "    จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
            "0                            NaN                           NaN   \n",
            "1                        37108.0                         495.0   \n",
            "2                        99541.0                         657.0   \n",
            "3                        66852.0                         735.0   \n",
            "4                        97924.0                         514.0   \n",
            "..                           ...                           ...   \n",
            "72                       18494.0                         363.0   \n",
            "73                      117679.0                        1368.0   \n",
            "74                       32805.0                         423.0   \n",
            "75                       36778.0                         243.0   \n",
            "76                      109222.0                        1654.0   \n",
            "\n",
            "    ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
            "0                       NaN                     NaN  \n",
            "1                   58280.0                   10.78  \n",
            "2                  109475.0                  525.13  \n",
            "3                   90050.0                   42.18  \n",
            "4                   20000.0                   11.34  \n",
            "..                      ...                     ...  \n",
            "72                 110500.0                   77.48  \n",
            "73                   1570.0                  655.43  \n",
            "74                   1570.0                   45.11  \n",
            "75                   1000.0                     NaN  \n",
            "76                   8000.0                   14.69  \n",
            "\n",
            "[77 rows x 21 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ใช้ KNNImputer\n",
        "imputer = KNNImputer(n_neighbors=3, weights=\"uniform\")\n",
        "imputed_data = imputer.fit_transform(numeric_data)\n",
        "print(imputed_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8lzasc_1hnd-",
        "outputId": "838aaad6-7372-4dc1-95c6-ca34c2c728f7"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1.30681818e+00 7.43229167e+00 4.10465116e-01 ... 7.56855263e+02\n",
            "  1.54664766e+05 2.64042576e+02]\n",
            " [1.33333333e+00 1.10000000e+01 4.63333333e-01 ... 4.95000000e+02\n",
            "  5.82800000e+04 1.07800000e+01]\n",
            " [0.00000000e+00 4.00000000e+00 4.96666667e-01 ... 6.57000000e+02\n",
            "  1.09475000e+05 5.25130000e+02]\n",
            " ...\n",
            " [0.00000000e+00 7.00000000e+00 3.50000000e-01 ... 4.23000000e+02\n",
            "  1.57000000e+03 4.51100000e+01]\n",
            " [0.00000000e+00 8.00000000e+00 3.90000000e-01 ... 2.43000000e+02\n",
            "  1.00000000e+03 3.81390000e+02]\n",
            " [3.00000000e+00 6.00000000e+00 3.00000000e-01 ... 1.65400000e+03\n",
            "  8.00000000e+03 1.46900000e+01]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ใช้ KNNImputer\n",
        "imputer = KNNImputer(n_neighbors=3, weights=\"distance\")\n",
        "imputed_data = imputer.fit_transform(numeric_data)\n",
        "print(imputed_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I_1dn94UM9q8",
        "outputId": "2867006d-f370-45cb-ff6a-c963783ccf31"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[1.30681818e+00 7.43229167e+00 4.10465116e-01 ... 7.56855263e+02\n",
            "  1.54664766e+05 2.64042576e+02]\n",
            " [1.37220401e+00 1.03331325e+01 4.59672646e-01 ... 4.95000000e+02\n",
            "  5.82800000e+04 1.07800000e+01]\n",
            " [0.00000000e+00 4.00000000e+00 4.58383809e-01 ... 6.57000000e+02\n",
            "  1.09475000e+05 5.25130000e+02]\n",
            " ...\n",
            " [0.00000000e+00 7.00000000e+00 3.50000000e-01 ... 4.23000000e+02\n",
            "  1.57000000e+03 4.51100000e+01]\n",
            " [0.00000000e+00 8.00000000e+00 3.90000000e-01 ... 2.43000000e+02\n",
            "  1.00000000e+03 4.17625617e+02]\n",
            " [3.00000000e+00 6.00000000e+00 3.00000000e-01 ... 1.65400000e+03\n",
            "  8.00000000e+03 1.46900000e+01]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงกลับเป็น DataFrame\n",
        "imputed_df = pd.DataFrame(imputed_data, columns=numeric_data.columns)"
      ],
      "metadata": {
        "id": "j5HNXZOkhrj2"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# แสดงตัวอย่างข้อมูลหลังจากการแทนค่าสูญหาย\n",
        "imputed_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 290
        },
        "id": "sK8RFOHGg9p4",
        "outputId": "b93569d2-930e-4587-bdd3-e09363ad200a"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        SO2        NO2        CO         O3       PM10      PM2.5  \\\n",
              "0  1.306818   7.432292  0.410465  23.149057  35.740909  18.912727   \n",
              "1  1.372204  10.333132  0.459673  23.959063  30.085742  15.440611   \n",
              "2  0.000000   4.000000  0.458384  36.000000  41.000000  15.000000   \n",
              "3  1.318647  10.508036  0.450768  23.265873  29.956253  15.191298   \n",
              "4  1.000000   6.000000  0.430000  18.000000  25.000000  13.000000   \n",
              "\n",
              "   จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน   อุณหภูมิ  ...  \\\n",
              "0    5840.815789       186624.703816         328823.75  27.104648  ...   \n",
              "1    2163.000000          213.020000         201080.00  27.450000  ...   \n",
              "2    6306.000000       605710.180000         359348.00  27.750000  ...   \n",
              "3    5599.000000       903434.950000         322190.00  26.700000  ...   \n",
              "4    3307.000000        76728.470000         285190.00  27.700000  ...   \n",
              "\n",
              "      ฤดูฝน    ฤดูหนาว  ปริมาณการใช้\\nไฟฟ้าครัวเรือน  \\\n",
              "0  27.98169  25.784507                  4.997224e+08   \n",
              "1  27.60000  27.000000                  3.468340e+08   \n",
              "2  28.30000  26.400000                  6.453736e+08   \n",
              "3  28.20000  25.000000                  3.838043e+08   \n",
              "4  28.40000  26.100000                  3.968339e+08   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้ากิจการ  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  \\\n",
              "0               1.327068e+09                    387582.251316   \n",
              "1               4.806469e+08                    211316.800000   \n",
              "2               1.332767e+09                    389608.800000   \n",
              "3               4.538902e+08                    180626.150000   \n",
              "4               6.586475e+08                    194569.750000   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายรถยนต์  จำนวนรถตาม\\nกฎหมายขนส่งทางบก  \\\n",
              "0              1.934265e+06                  77010.447368   \n",
              "1              1.265888e+06                  37108.000000   \n",
              "2              1.974241e+06                  99541.000000   \n",
              "3              1.487255e+06                  66852.000000   \n",
              "4              1.783491e+06                  97924.000000   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  ปริมาณขยะมูลฝอย\\nตกค้าง  \\\n",
              "0                    756.855263            154664.765625   \n",
              "1                    495.000000             58280.000000   \n",
              "2                    657.000000            109475.000000   \n",
              "3                    735.000000             90050.000000   \n",
              "4                    514.000000             20000.000000   \n",
              "\n",
              "   ปริมาณพื้นที่\\nสีเขียว  \n",
              "0              264.042576  \n",
              "1               10.780000  \n",
              "2              525.130000  \n",
              "3               42.180000  \n",
              "4               11.340000  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-9c54ac87-257c-4321-ba40-259a9cc48757\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>อุณหภูมิ</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.306818</td>\n",
              "      <td>7.432292</td>\n",
              "      <td>0.410465</td>\n",
              "      <td>23.149057</td>\n",
              "      <td>35.740909</td>\n",
              "      <td>18.912727</td>\n",
              "      <td>5840.815789</td>\n",
              "      <td>186624.703816</td>\n",
              "      <td>328823.75</td>\n",
              "      <td>27.104648</td>\n",
              "      <td>...</td>\n",
              "      <td>27.98169</td>\n",
              "      <td>25.784507</td>\n",
              "      <td>4.997224e+08</td>\n",
              "      <td>1.327068e+09</td>\n",
              "      <td>387582.251316</td>\n",
              "      <td>1.934265e+06</td>\n",
              "      <td>77010.447368</td>\n",
              "      <td>756.855263</td>\n",
              "      <td>154664.765625</td>\n",
              "      <td>264.042576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.372204</td>\n",
              "      <td>10.333132</td>\n",
              "      <td>0.459673</td>\n",
              "      <td>23.959063</td>\n",
              "      <td>30.085742</td>\n",
              "      <td>15.440611</td>\n",
              "      <td>2163.000000</td>\n",
              "      <td>213.020000</td>\n",
              "      <td>201080.00</td>\n",
              "      <td>27.450000</td>\n",
              "      <td>...</td>\n",
              "      <td>27.60000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>3.468340e+08</td>\n",
              "      <td>4.806469e+08</td>\n",
              "      <td>211316.800000</td>\n",
              "      <td>1.265888e+06</td>\n",
              "      <td>37108.000000</td>\n",
              "      <td>495.000000</td>\n",
              "      <td>58280.000000</td>\n",
              "      <td>10.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.458384</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>15.000000</td>\n",
              "      <td>6306.000000</td>\n",
              "      <td>605710.180000</td>\n",
              "      <td>359348.00</td>\n",
              "      <td>27.750000</td>\n",
              "      <td>...</td>\n",
              "      <td>28.30000</td>\n",
              "      <td>26.400000</td>\n",
              "      <td>6.453736e+08</td>\n",
              "      <td>1.332767e+09</td>\n",
              "      <td>389608.800000</td>\n",
              "      <td>1.974241e+06</td>\n",
              "      <td>99541.000000</td>\n",
              "      <td>657.000000</td>\n",
              "      <td>109475.000000</td>\n",
              "      <td>525.130000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.318647</td>\n",
              "      <td>10.508036</td>\n",
              "      <td>0.450768</td>\n",
              "      <td>23.265873</td>\n",
              "      <td>29.956253</td>\n",
              "      <td>15.191298</td>\n",
              "      <td>5599.000000</td>\n",
              "      <td>903434.950000</td>\n",
              "      <td>322190.00</td>\n",
              "      <td>26.700000</td>\n",
              "      <td>...</td>\n",
              "      <td>28.20000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>3.838043e+08</td>\n",
              "      <td>4.538902e+08</td>\n",
              "      <td>180626.150000</td>\n",
              "      <td>1.487255e+06</td>\n",
              "      <td>66852.000000</td>\n",
              "      <td>735.000000</td>\n",
              "      <td>90050.000000</td>\n",
              "      <td>42.180000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>0.430000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>13.000000</td>\n",
              "      <td>3307.000000</td>\n",
              "      <td>76728.470000</td>\n",
              "      <td>285190.00</td>\n",
              "      <td>27.700000</td>\n",
              "      <td>...</td>\n",
              "      <td>28.40000</td>\n",
              "      <td>26.100000</td>\n",
              "      <td>3.968339e+08</td>\n",
              "      <td>6.586475e+08</td>\n",
              "      <td>194569.750000</td>\n",
              "      <td>1.783491e+06</td>\n",
              "      <td>97924.000000</td>\n",
              "      <td>514.000000</td>\n",
              "      <td>20000.000000</td>\n",
              "      <td>11.340000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9c54ac87-257c-4321-ba40-259a9cc48757')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-9c54ac87-257c-4321-ba40-259a9cc48757 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-9c54ac87-257c-4321-ba40-259a9cc48757');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d18601d3-9553-4241-a726-29c07cba567b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d18601d3-9553-4241-a726-29c07cba567b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d18601d3-9553-4241-a726-29c07cba567b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "imputed_df"
            }
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##การบันทึกไฟล์"
      ],
      "metadata": {
        "id": "n2_-Yd5OXlAB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "output_path = 'Data_Set_Imputed.xlsx'\n",
        "imputed_df.to_excel(output_path, index=False)\n",
        "print(\"ไฟล์ที่บันทึกแล้ว:\", output_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LEVP30JfibHN",
        "outputId": "71aa7290-e4e7-43e3-8365-795769c80c41"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ไฟล์ที่บันทึกแล้ว: Data_Set_Imputed.xlsx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ดาวน์โหลดไฟล์ข้อมูล"
      ],
      "metadata": {
        "id": "0EvBx-REYTyV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('Data_Set_Imputed.xlsx')\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "jM-Tl-IxjRIN",
        "outputId": "f9f4efe9-8a32-41ef-d4b7-23d79ebbc36b"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_a072b613-9306-435e-85ca-b6be09b33199\", \"Data_Set_Imputed.xlsx\", 17125)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##หาค่าสูญหายปริมาณมลพิษทางอากาศ##"
      ],
      "metadata": {
        "id": "360AnHWPMUaA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# เข้าถึงไฟล์ใน Google Drive\n",
        "data1 = pd.read_excel('/content/drive/MyDrive/Project เด็กอ.บี/ตัวแปรปริมาณมลพิษทางอากาศ.xlsx')\n",
        "data1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "z0XXugm8MTQO",
        "outputId": "99e5d0e5-1344-4c80-839f-9fcc41cc8ce6"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2    CO   O3 PM10 PM2.5\n",
              "0          NaN  NaN  NaN   NaN  NaN  NaN   NaN\n",
              "1       กระบี่    -    -     -    -    -     -\n",
              "2    กาญจนบุรี    0    4     -   36   41    15\n",
              "3    กาฬสินธุ์    -    -     -    -    -     -\n",
              "4  \\tกำแพงเพชร    1    6  0.43   18   25    13"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ebed0295-128a-4172-86c8-6dea7b6f2aa9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>-</td>\n",
              "      <td>36</td>\n",
              "      <td>41</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "      <td>-</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>0.43</td>\n",
              "      <td>18</td>\n",
              "      <td>25</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ebed0295-128a-4172-86c8-6dea7b6f2aa9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ebed0295-128a-4172-86c8-6dea7b6f2aa9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ebed0295-128a-4172-86c8-6dea7b6f2aa9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8512294b-243c-44ca-92be-0091ba604ec1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8512294b-243c-44ca-92be-0091ba604ec1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8512294b-243c-44ca-92be-0091ba604ec1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data1",
              "summary": "{\n  \"name\": \"data1\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"\\u0e08\\u0e31\\u0e07\\u0e2b\\u0e27\\u0e31\\u0e14\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"\\t\\u0e02\\u0e2d\\u0e19\\u0e41\\u0e01\\u0e48\\u0e19\",\n          \"\\t\\u0e1e\\u0e34\\u0e08\\u0e34\\u0e15\\u0e23\",\n          \"\\u0e0a\\u0e38\\u0e21\\u0e1e\\u0e23\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SO2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0,\n          3.25,\n          \"-\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 18,\n        \"samples\": [\n          \"-\",\n          4,\n          8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          0.37,\n          0.61,\n          0.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          21,\n          19,\n          \"-\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM10\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 26,\n        \"samples\": [\n          24,\n          34,\n          \"-\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 21,\n        \"samples\": [\n          \"-\",\n          22,\n          23\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงค่าที่เป็น '-' หรือ '\\t' ให้เป็น NaN\n",
        "data1_cleaned = data1.replace(['-', '\\t', ' '], np.nan)\n",
        "data1_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 261
        },
        "id": "qGLQk-R5Myps",
        "outputId": "3bcdb552-b88a-4fb2-e188-68516af4f5a5"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-7-b9402d880198>:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
            "  data1_cleaned = data1.replace(['-', '\\t', ' '], np.nan)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2    CO    O3  PM10  PM2.5\n",
              "0          NaN  NaN  NaN   NaN   NaN   NaN    NaN\n",
              "1       กระบี่  NaN  NaN   NaN   NaN   NaN    NaN\n",
              "2    กาญจนบุรี  0.0  4.0   NaN  36.0  41.0   15.0\n",
              "3    กาฬสินธุ์  NaN  NaN   NaN   NaN   NaN    NaN\n",
              "4  \\tกำแพงเพชร  1.0  6.0  0.43  18.0  25.0   13.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-02f97876-51e5-4fb5-91fc-8afba049a62d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>0.0</td>\n",
              "      <td>4.0</td>\n",
              "      <td>NaN</td>\n",
              "      <td>36.0</td>\n",
              "      <td>41.0</td>\n",
              "      <td>15.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>1.0</td>\n",
              "      <td>6.0</td>\n",
              "      <td>0.43</td>\n",
              "      <td>18.0</td>\n",
              "      <td>25.0</td>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02f97876-51e5-4fb5-91fc-8afba049a62d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-02f97876-51e5-4fb5-91fc-8afba049a62d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-02f97876-51e5-4fb5-91fc-8afba049a62d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f575aee6-7ade-4d8c-9ca4-848bb737e429\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f575aee6-7ade-4d8c-9ca4-848bb737e429')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f575aee6-7ade-4d8c-9ca4-848bb737e429 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data1_cleaned",
              "summary": "{\n  \"name\": \"data1_cleaned\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"\\u0e08\\u0e31\\u0e07\\u0e2b\\u0e27\\u0e31\\u0e14\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"\\t\\u0e02\\u0e2d\\u0e19\\u0e41\\u0e01\\u0e48\\u0e19\",\n          \"\\t\\u0e1e\\u0e34\\u0e08\\u0e34\\u0e15\\u0e23\",\n          \"\\u0e0a\\u0e38\\u0e21\\u0e1e\\u0e23\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4181789383068282,\n        \"min\": 0.0,\n        \"max\": 8.5,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          0.0,\n          1.0,\n          8.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.417909508326179,\n        \"min\": 2.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          4.0,\n          6.0,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19605579245243643,\n        \"min\": 0.08,\n        \"max\": 0.98,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          0.64,\n          0.36,\n          0.54\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.450748991739386,\n        \"min\": 13.0,\n        \"max\": 52.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          19.0,\n          25.0,\n          36.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 7.876500979290721,\n        \"min\": 23.0,\n        \"max\": 54.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          38.0,\n          27.0,\n          41.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.370187492607006,\n        \"min\": 11.0,\n        \"max\": 28.0,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          15.0,\n          18.0,\n          25.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ตรวจสอบว่าคอลัมน์ใดมีค่าสูญหาย\n",
        "missing_columns = data1_cleaned.columns[data1_cleaned.isnull().any()]\n",
        "print(\"คอลัมน์ที่มีค่าสูญหาย:\", missing_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kVZS16XAM-fn",
        "outputId": "649e2e53-b547-4966-9861-7800dabcafb3"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "คอลัมน์ที่มีค่าสูญหาย: Index(['จังหวัด', 'SO2', 'NO2', 'CO', 'O3', 'PM10', 'PM2.5'], dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# เลือกเฉพาะคอลัมน์ที่เป็นตัวเลขสำหรับการแทนค่าสูญหาย\n",
        "numeric_data = data1_cleaned.select_dtypes(include=[np.number])\n",
        "print(numeric_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q87KCdoLNOBH",
        "outputId": "23c873f7-4674-4e36-a4e5-9619c3f6a0a5"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    SO2  NO2    CO    O3  PM10  PM2.5\n",
            "0   NaN  NaN   NaN   NaN   NaN    NaN\n",
            "1   NaN  NaN   NaN   NaN   NaN    NaN\n",
            "2   0.0  4.0   NaN  36.0  41.0   15.0\n",
            "3   NaN  NaN   NaN   NaN   NaN    NaN\n",
            "4   1.0  6.0  0.43  18.0  25.0   13.0\n",
            "..  ...  ...   ...   ...   ...    ...\n",
            "72  NaN  NaN   NaN   NaN   NaN    NaN\n",
            "73  1.0  6.0  0.64  24.0  31.0   19.0\n",
            "74  0.0  7.0  0.35  24.0  41.0   23.0\n",
            "75  0.0  8.0  0.39  23.0  34.0   18.0\n",
            "76  3.0  6.0  0.30  27.0  32.0   19.0\n",
            "\n",
            "[77 rows x 6 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ใช้ KNNImputer\n",
        "imputer = KNNImputer(n_neighbors=3, weights=\"distance\")\n",
        "imputed_data = imputer.fit_transform(numeric_data)\n",
        "print(imputed_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BlZAbgKbNZyo",
        "outputId": "81ede5fa-4371-45e5-d0b7-69c33185e978"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 0.          4.          0.6097259  36.         41.         15.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          6.          0.43       18.         25.         13.        ]\n",
            " [ 3.31179854  7.97652617  0.59459075 19.64707091 48.         28.        ]\n",
            " [ 1.          9.          0.35       15.         26.         11.        ]\n",
            " [ 2.         10.          0.31330504 16.         46.         19.        ]\n",
            " [ 1.7316267  18.          0.5033905  24.         30.         16.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.31376289  3.          0.5        24.         30.         20.        ]\n",
            " [ 0.5         4.          0.89       32.         35.         21.        ]\n",
            " [ 1.          4.          0.25       15.         24.         11.        ]\n",
            " [ 0.          2.          0.2        22.         24.         11.        ]\n",
            " [ 0.69992537  9.          0.19       21.         38.         20.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          8.          0.53       24.         38.         20.        ]\n",
            " [ 1.          6.          0.21       28.         36.         21.        ]\n",
            " [ 1.         15.          0.56       25.         41.         24.        ]\n",
            " [ 0.          6.          0.32       15.         35.         15.        ]\n",
            " [ 1.         10.          0.77       29.         41.         20.        ]\n",
            " [ 1.         17.          0.5        28.         36.         19.5       ]\n",
            " [ 0.70074581  4.          0.33336545 25.         26.         14.        ]\n",
            " [ 2.          5.          0.62       20.         51.         27.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 0.          3.          0.18       27.         23.         12.        ]\n",
            " [ 2.         12.          0.37       22.         44.         21.        ]\n",
            " [ 0.         11.          0.36       23.         36.         19.        ]\n",
            " [ 1.         11.02112886  0.42462977 22.         42.         24.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 2.          6.50799934  0.60844363 20.         54.         20.        ]\n",
            " [ 1.20846177  3.          0.43       22.         34.         21.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 2.          3.          0.56       23.         35.         17.        ]\n",
            " [ 1.          8.          0.18       33.         42.         23.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          5.          0.26       19.         27.         25.        ]\n",
            " [ 1.          7.          0.53       23.         35.         24.        ]\n",
            " [ 0.          5.          0.26       13.         31.         12.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          3.          0.29       29.         27.         14.        ]\n",
            " [ 1.          2.          0.61       21.         30.         22.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.6259333   5.81399071  0.40629901 15.         28.         15.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 3.25       11.          0.52       23.         35.25       18.        ]\n",
            " [ 0.6470745  10.61816395  0.58404785 52.         53.         24.        ]\n",
            " [ 1.         16.          0.49       17.         36.         16.        ]\n",
            " [ 2.         11.93073158  0.41494062 23.         44.         23.        ]\n",
            " [ 1.         11.          0.33       25.         38.         22.        ]\n",
            " [ 1.          3.          0.16       23.         35.         21.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          4.          0.48       26.         26.         17.        ]\n",
            " [ 1.          7.          0.11       16.         34.         16.        ]\n",
            " [ 1.          3.          0.30429125 16.         30.         12.        ]\n",
            " [ 3.25       13.25        0.44       25.4        40.         22.2       ]\n",
            " [ 2.          7.          0.54       30.         30.         17.        ]\n",
            " [ 8.5        16.5         0.98       21.5        47.5        23.5       ]\n",
            " [ 1.          5.          0.27       28.         35.         18.        ]\n",
            " [ 1.40999875 16.          0.46024709 23.31026382 43.         21.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 0.          3.          0.08       21.         31.         16.        ]\n",
            " [ 1.          7.          0.48       20.         36.         20.        ]\n",
            " [ 3.          6.17633408  0.44       15.         24.         13.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          5.          0.3        18.         51.         27.        ]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.30681818  7.43229167  0.41046512 23.1490566  35.74090909 18.91272727]\n",
            " [ 1.          6.          0.64       24.         31.         19.        ]\n",
            " [ 0.          7.          0.35       24.         41.         23.        ]\n",
            " [ 0.          8.          0.39       23.         34.         18.        ]\n",
            " [ 3.          6.          0.3        27.         32.         19.        ]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงกลับเป็น DataFrame\n",
        "imputed_df = pd.DataFrame(imputed_data, columns=numeric_data.columns)"
      ],
      "metadata": {
        "id": "uDmAJ-Z7NnFr"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# แสดงตัวอย่างข้อมูลหลังจากการแทนค่าสูญหาย\n",
        "imputed_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "yVEideUPNm9-",
        "outputId": "168d5fba-b9aa-4e09-8724-eaa6f8ead437"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        SO2       NO2        CO         O3       PM10      PM2.5\n",
              "0  1.306818  7.432292  0.410465  23.149057  35.740909  18.912727\n",
              "1  1.306818  7.432292  0.410465  23.149057  35.740909  18.912727\n",
              "2  0.000000  4.000000  0.609726  36.000000  41.000000  15.000000\n",
              "3  1.306818  7.432292  0.410465  23.149057  35.740909  18.912727\n",
              "4  1.000000  6.000000  0.430000  18.000000  25.000000  13.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8466dc28-68c7-430d-a7e3-5465cff5a607\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.306818</td>\n",
              "      <td>7.432292</td>\n",
              "      <td>0.410465</td>\n",
              "      <td>23.149057</td>\n",
              "      <td>35.740909</td>\n",
              "      <td>18.912727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.306818</td>\n",
              "      <td>7.432292</td>\n",
              "      <td>0.410465</td>\n",
              "      <td>23.149057</td>\n",
              "      <td>35.740909</td>\n",
              "      <td>18.912727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>0.609726</td>\n",
              "      <td>36.000000</td>\n",
              "      <td>41.000000</td>\n",
              "      <td>15.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.306818</td>\n",
              "      <td>7.432292</td>\n",
              "      <td>0.410465</td>\n",
              "      <td>23.149057</td>\n",
              "      <td>35.740909</td>\n",
              "      <td>18.912727</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>0.430000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>13.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8466dc28-68c7-430d-a7e3-5465cff5a607')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8466dc28-68c7-430d-a7e3-5465cff5a607 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8466dc28-68c7-430d-a7e3-5465cff5a607');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-87657e47-6080-4b87-85c9-649bc8e6924c\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-87657e47-6080-4b87-85c9-649bc8e6924c')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-87657e47-6080-4b87-85c9-649bc8e6924c button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "imputed_df",
              "summary": "{\n  \"name\": \"imputed_df\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"SO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.101218032221749,\n        \"min\": 0.0,\n        \"max\": 8.5,\n        \"num_unique_values\": 17,\n        \"samples\": [\n          1.3068181818181819,\n          0.0,\n          1.731626697008425\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"NO2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.5635576772625286,\n        \"min\": 2.0,\n        \"max\": 18.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          2.0,\n          6.507999341708252,\n          7.432291666666667\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CO\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15347512498461963,\n        \"min\": 0.08,\n        \"max\": 0.98,\n        \"num_unique_values\": 46,\n        \"samples\": [\n          0.98,\n          0.29,\n          0.61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"O3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.350820644080846,\n        \"min\": 13.0,\n        \"max\": 52.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          22.0,\n          33.0,\n          23.149056603773587\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.639317155901707,\n        \"min\": 23.0,\n        \"max\": 54.0,\n        \"num_unique_values\": 26,\n        \"samples\": [\n          24.0,\n          34.0,\n          35.74090909090909\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PM2.5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.6837500395747518,\n        \"min\": 11.0,\n        \"max\": 28.0,\n        \"num_unique_values\": 21,\n        \"samples\": [\n          18.912727272727274,\n          22.0,\n          23.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##การบันทึกไฟล์"
      ],
      "metadata": {
        "id": "BiRn-9e6NyJC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "output_path = 'Data1_Set_Imputed.xlsx'\n",
        "imputed_df.to_excel(output_path, index=False)\n",
        "print(\"ไฟล์ที่บันทึกแล้ว:\", output_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L_-SbU7kOI8x",
        "outputId": "dbaad019-b559-4e5a-b756-1aa6b8064a13"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ไฟล์ที่บันทึกแล้ว: Data1_Set_Imputed.xlsx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ดาวน์โหลดไฟล์ข้อมูล"
      ],
      "metadata": {
        "id": "xzuPj5qoN2KG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('Data1_Set_Imputed.xlsx')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "RyTjKduqOE0z",
        "outputId": "7dcd96f5-288f-4176-bddf-02c2c742e9ad"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_cbf27d56-8039-4312-9633-1052ee7fe151\", \"Data_Set_Imputed.xlsx\", 7486)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##หาค่าสูญหายตัวแปรในปัจจัยที่ส่งผลต่อมลพิษทางอากาศ"
      ],
      "metadata": {
        "id": "lN8WmeX8OcSD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# เข้าถึงไฟล์ใน Google Drive\n",
        "data2 = pd.read_excel('/content/drive/MyDrive/Project เด็กอ.บี/ตัวแปรในปัจจัยที่ส่งผลต่อมลพิษ.xlsx')\n",
        "data2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "BIuQ_wAtOkRx",
        "outputId": "7e91df6f-47f2-44b4-9e27-0a9d0fb5d058"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน อุณหภูมิ  \\\n",
              "0          NaN            NaN                 NaN               NaN      NaN   \n",
              "1       กระบี่         2163.0              213.02          201080.0    27.45   \n",
              "2    กาญจนบุรี         6306.0           605710.18          359348.0    27.75   \n",
              "3    กาฬสินธุ์         5599.0           903434.95          322190.0     26.7   \n",
              "4  \\tกำแพงเพชร         3307.0            76728.47          285190.0     27.7   \n",
              "\n",
              "  ฤดูร้อน ฤดูฝน ฤดูหนาว ปริมาณการใช้\\nไฟฟ้าครัวเรือน  \\\n",
              "0     NaN   NaN     NaN                          NaN   \n",
              "1      28  27.6      27                    346833979   \n",
              "2    28.8  28.3    26.4                    645373570   \n",
              "3    26.9  28.2      25                    383804304   \n",
              "4    28.6  28.4    26.1                    396833854   \n",
              "\n",
              "  ปริมาณการใช้\\nไฟฟ้ากิจการ  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  \\\n",
              "0                       NaN                              NaN   \n",
              "1                 480646937                        211316.80   \n",
              "2                1332767206                        389608.80   \n",
              "3                 453890163                        180626.15   \n",
              "4                 658647531                        194569.75   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายรถยนต์  จำนวนรถตาม\\nกฎหมายขนส่งทางบก  \\\n",
              "0                       NaN                           NaN   \n",
              "1                 1265888.0                       37108.0   \n",
              "2                 1974241.0                       99541.0   \n",
              "3                 1487255.0                       66852.0   \n",
              "4                 1783491.0                       97924.0   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น ปริมาณขยะมูลฝอย\\nตกค้าง ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                           NaN                     NaN                    NaN  \n",
              "1                         495.0                   58280                  10.78  \n",
              "2                         657.0                  109475                 525.13  \n",
              "3                         735.0                   90050                  42.18  \n",
              "4                         514.0                   20000                  11.34  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b2091d85-efad-4d52-a688-8bdf58779236\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>อุณหภูมิ</th>\n",
              "      <th>ฤดูร้อน</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>2163.0</td>\n",
              "      <td>213.02</td>\n",
              "      <td>201080.0</td>\n",
              "      <td>27.45</td>\n",
              "      <td>28</td>\n",
              "      <td>27.6</td>\n",
              "      <td>27</td>\n",
              "      <td>346833979</td>\n",
              "      <td>480646937</td>\n",
              "      <td>211316.80</td>\n",
              "      <td>1265888.0</td>\n",
              "      <td>37108.0</td>\n",
              "      <td>495.0</td>\n",
              "      <td>58280</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>6306.0</td>\n",
              "      <td>605710.18</td>\n",
              "      <td>359348.0</td>\n",
              "      <td>27.75</td>\n",
              "      <td>28.8</td>\n",
              "      <td>28.3</td>\n",
              "      <td>26.4</td>\n",
              "      <td>645373570</td>\n",
              "      <td>1332767206</td>\n",
              "      <td>389608.80</td>\n",
              "      <td>1974241.0</td>\n",
              "      <td>99541.0</td>\n",
              "      <td>657.0</td>\n",
              "      <td>109475</td>\n",
              "      <td>525.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>5599.0</td>\n",
              "      <td>903434.95</td>\n",
              "      <td>322190.0</td>\n",
              "      <td>26.7</td>\n",
              "      <td>26.9</td>\n",
              "      <td>28.2</td>\n",
              "      <td>25</td>\n",
              "      <td>383804304</td>\n",
              "      <td>453890163</td>\n",
              "      <td>180626.15</td>\n",
              "      <td>1487255.0</td>\n",
              "      <td>66852.0</td>\n",
              "      <td>735.0</td>\n",
              "      <td>90050</td>\n",
              "      <td>42.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>3307.0</td>\n",
              "      <td>76728.47</td>\n",
              "      <td>285190.0</td>\n",
              "      <td>27.7</td>\n",
              "      <td>28.6</td>\n",
              "      <td>28.4</td>\n",
              "      <td>26.1</td>\n",
              "      <td>396833854</td>\n",
              "      <td>658647531</td>\n",
              "      <td>194569.75</td>\n",
              "      <td>1783491.0</td>\n",
              "      <td>97924.0</td>\n",
              "      <td>514.0</td>\n",
              "      <td>20000</td>\n",
              "      <td>11.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b2091d85-efad-4d52-a688-8bdf58779236')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b2091d85-efad-4d52-a688-8bdf58779236 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b2091d85-efad-4d52-a688-8bdf58779236');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f10ae71c-01aa-4989-8e8f-cfb681302129\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f10ae71c-01aa-4989-8e8f-cfb681302129')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f10ae71c-01aa-4989-8e8f-cfb681302129 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data2",
              "summary": "{\n  \"name\": \"data2\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"\\u0e08\\u0e31\\u0e07\\u0e2b\\u0e27\\u0e31\\u0e14\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"\\t\\u0e02\\u0e2d\\u0e19\\u0e41\\u0e01\\u0e48\\u0e19\",\n          \"\\t\\u0e1e\\u0e34\\u0e08\\u0e34\\u0e15\\u0e23\",\n          \"\\u0e0a\\u0e38\\u0e21\\u0e1e\\u0e23\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e42\\u0e23\\u0e07\\u0e07\\u0e32\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6717.7953719168445,\n        \"min\": 456.0,\n        \"max\": 36167.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          11674.0,\n          2438.0,\n          3298.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e01\\n\\u0e02\\u0e2d\\u0e07\\u0e40\\u0e2a\\u0e35\\u0e22\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 347137.7533882996,\n        \"min\": 13.32,\n        \"max\": 1586868.1,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          118002.81,\n          50679.3,\n          1324.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 217605.84926918516,\n        \"min\": 75048.0,\n        \"max\": 1118807.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          668539.0,\n          202835.0,\n          248311.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e2d\\u0e38\\u0e13\\u0e2b\\u0e20\\u0e39\\u0e21\\u0e34\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 48,\n        \"samples\": [\n          28.1,\n          25.95,\n          27.599999999999998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e23\\u0e49\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          26.1,\n          \"-\",\n          27.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e1d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 25,\n        \"samples\": [\n          24.2,\n          29.2,\n          27.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e2b\\u0e19\\u0e32\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          27.3,\n          24.7,\n          25.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          169617411,\n          346833979,\n          267188234\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e01\\u0e34\\u0e08\\u0e01\\u0e32\\u0e23\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 70,\n        \"samples\": [\n          180499264,\n          480646937,\n          1098448140\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e19\\u0e49\\u0e33\\u0e21\\u0e31\\u0e19\\u0e17\\u0e35\\u0e48\\u0e43\\u0e0a\\u0e49\\n\\u0e01\\u0e31\\u0e1a\\u0e22\\u0e32\\u0e19\\u0e1e\\u0e32\\u0e2b\\u0e19\\u0e30\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 411885.845732189,\n        \"min\": 51905.71,\n        \"max\": 2580980.45,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          828250.69,\n          794535.15,\n          139142.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e23\\u0e16\\u0e22\\u0e19\\u0e15\\u0e4c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1462938.4649610433,\n        \"min\": 356957.0,\n        \"max\": 7984867.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          4375122.0,\n          1435643.0,\n          1503196.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e02\\u0e19\\u0e2a\\u0e48\\u0e07\\u0e17\\u0e32\\u0e07\\u0e1a\\u0e01\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62982.3271307954,\n        \"min\": 5890.0,\n        \"max\": 302198.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          151909.0,\n          50406.0,\n          40026.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e17\\u0e35\\u0e48\\u0e40\\u0e01\\u0e34\\u0e14\\u0e02\\u0e36\\u0e49\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 594.2752157925343,\n        \"min\": 175.0,\n        \"max\": 3120.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          1348.0,\n          560.0,\n          650.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e15\\u0e01\\u0e04\\u0e49\\u0e32\\u0e07\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 63,\n        \"samples\": [\n          1570,\n          7400,\n          58280\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e1e\\u0e37\\u0e49\\u0e19\\u0e17\\u0e35\\u0e48\\n\\u0e2a\\u0e35\\u0e40\\u0e02\\u0e35\\u0e22\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 67,\n        \"samples\": [\n          24.92,\n          2.49,\n          1403.73\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงค่าที่เป็น '-' หรือ '\\t' ให้เป็น NaN\n",
        "data2_cleaned = data2.replace(['-', '\\t', ' '], np.nan)\n",
        "data2_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 330
        },
        "id": "knd4Wu6GOljx",
        "outputId": "95bdbc91-287c-4990-8c49-b612b84082f1"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-17-d79ce50152de>:2: FutureWarning: Downcasting behavior in `replace` is deprecated and will be removed in a future version. To retain the old behavior, explicitly call `result.infer_objects(copy=False)`. To opt-in to the future behavior, set `pd.set_option('future.no_silent_downcasting', True)`\n",
            "  data2_cleaned = data2.replace(['-', '\\t', ' '], np.nan)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  อุณหภูมิ  \\\n",
              "0          NaN            NaN                 NaN               NaN       NaN   \n",
              "1       กระบี่         2163.0              213.02          201080.0     27.45   \n",
              "2    กาญจนบุรี         6306.0           605710.18          359348.0     27.75   \n",
              "3    กาฬสินธุ์         5599.0           903434.95          322190.0     26.70   \n",
              "4  \\tกำแพงเพชร         3307.0            76728.47          285190.0     27.70   \n",
              "\n",
              "   ฤดูร้อน  ฤดูฝน  ฤดูหนาว  ปริมาณการใช้\\nไฟฟ้าครัวเรือน  \\\n",
              "0      NaN    NaN      NaN                           NaN   \n",
              "1     28.0   27.6     27.0                   346833979.0   \n",
              "2     28.8   28.3     26.4                   645373570.0   \n",
              "3     26.9   28.2     25.0                   383804304.0   \n",
              "4     28.6   28.4     26.1                   396833854.0   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้ากิจการ  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  \\\n",
              "0                        NaN                              NaN   \n",
              "1               4.806469e+08                        211316.80   \n",
              "2               1.332767e+09                        389608.80   \n",
              "3               4.538902e+08                        180626.15   \n",
              "4               6.586475e+08                        194569.75   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายรถยนต์  จำนวนรถตาม\\nกฎหมายขนส่งทางบก  \\\n",
              "0                       NaN                           NaN   \n",
              "1                 1265888.0                       37108.0   \n",
              "2                 1974241.0                       99541.0   \n",
              "3                 1487255.0                       66852.0   \n",
              "4                 1783491.0                       97924.0   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  ปริมาณขยะมูลฝอย\\nตกค้าง  \\\n",
              "0                           NaN                      NaN   \n",
              "1                         495.0                  58280.0   \n",
              "2                         657.0                 109475.0   \n",
              "3                         735.0                  90050.0   \n",
              "4                         514.0                  20000.0   \n",
              "\n",
              "   ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                     NaN  \n",
              "1                   10.78  \n",
              "2                  525.13  \n",
              "3                   42.18  \n",
              "4                   11.34  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ff45b63b-16d4-44c1-adcb-4b9ce4f757d6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>อุณหภูมิ</th>\n",
              "      <th>ฤดูร้อน</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>กระบี่</td>\n",
              "      <td>2163.0</td>\n",
              "      <td>213.02</td>\n",
              "      <td>201080.0</td>\n",
              "      <td>27.45</td>\n",
              "      <td>28.0</td>\n",
              "      <td>27.6</td>\n",
              "      <td>27.0</td>\n",
              "      <td>346833979.0</td>\n",
              "      <td>4.806469e+08</td>\n",
              "      <td>211316.80</td>\n",
              "      <td>1265888.0</td>\n",
              "      <td>37108.0</td>\n",
              "      <td>495.0</td>\n",
              "      <td>58280.0</td>\n",
              "      <td>10.78</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>กาญจนบุรี</td>\n",
              "      <td>6306.0</td>\n",
              "      <td>605710.18</td>\n",
              "      <td>359348.0</td>\n",
              "      <td>27.75</td>\n",
              "      <td>28.8</td>\n",
              "      <td>28.3</td>\n",
              "      <td>26.4</td>\n",
              "      <td>645373570.0</td>\n",
              "      <td>1.332767e+09</td>\n",
              "      <td>389608.80</td>\n",
              "      <td>1974241.0</td>\n",
              "      <td>99541.0</td>\n",
              "      <td>657.0</td>\n",
              "      <td>109475.0</td>\n",
              "      <td>525.13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>กาฬสินธุ์</td>\n",
              "      <td>5599.0</td>\n",
              "      <td>903434.95</td>\n",
              "      <td>322190.0</td>\n",
              "      <td>26.70</td>\n",
              "      <td>26.9</td>\n",
              "      <td>28.2</td>\n",
              "      <td>25.0</td>\n",
              "      <td>383804304.0</td>\n",
              "      <td>4.538902e+08</td>\n",
              "      <td>180626.15</td>\n",
              "      <td>1487255.0</td>\n",
              "      <td>66852.0</td>\n",
              "      <td>735.0</td>\n",
              "      <td>90050.0</td>\n",
              "      <td>42.18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>3307.0</td>\n",
              "      <td>76728.47</td>\n",
              "      <td>285190.0</td>\n",
              "      <td>27.70</td>\n",
              "      <td>28.6</td>\n",
              "      <td>28.4</td>\n",
              "      <td>26.1</td>\n",
              "      <td>396833854.0</td>\n",
              "      <td>6.586475e+08</td>\n",
              "      <td>194569.75</td>\n",
              "      <td>1783491.0</td>\n",
              "      <td>97924.0</td>\n",
              "      <td>514.0</td>\n",
              "      <td>20000.0</td>\n",
              "      <td>11.34</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ff45b63b-16d4-44c1-adcb-4b9ce4f757d6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ff45b63b-16d4-44c1-adcb-4b9ce4f757d6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ff45b63b-16d4-44c1-adcb-4b9ce4f757d6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-50d7a0c2-d970-4b25-a6d3-452b49e0d692\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-50d7a0c2-d970-4b25-a6d3-452b49e0d692')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-50d7a0c2-d970-4b25-a6d3-452b49e0d692 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data2_cleaned",
              "summary": "{\n  \"name\": \"data2_cleaned\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"\\u0e08\\u0e31\\u0e07\\u0e2b\\u0e27\\u0e31\\u0e14\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 76,\n        \"samples\": [\n          \"\\t\\u0e02\\u0e2d\\u0e19\\u0e41\\u0e01\\u0e48\\u0e19\",\n          \"\\t\\u0e1e\\u0e34\\u0e08\\u0e34\\u0e15\\u0e23\",\n          \"\\u0e0a\\u0e38\\u0e21\\u0e1e\\u0e23\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e42\\u0e23\\u0e07\\u0e07\\u0e32\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6717.7953719168445,\n        \"min\": 456.0,\n        \"max\": 36167.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          11674.0,\n          2438.0,\n          3298.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e01\\n\\u0e02\\u0e2d\\u0e07\\u0e40\\u0e2a\\u0e35\\u0e22\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 347137.7533882996,\n        \"min\": 13.32,\n        \"max\": 1586868.1,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          118002.81,\n          50679.3,\n          1324.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 217605.84926918516,\n        \"min\": 75048.0,\n        \"max\": 1118807.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          668539.0,\n          202835.0,\n          248311.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e2d\\u0e38\\u0e13\\u0e2b\\u0e20\\u0e39\\u0e21\\u0e34\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.2704693831850304,\n        \"min\": 19.9,\n        \"max\": 29.3,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          28.3,\n          25.95,\n          28.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e23\\u0e49\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3498982747276462,\n        \"min\": 20.4,\n        \"max\": 29.4,\n        \"num_unique_values\": 33,\n        \"samples\": [\n          27.1,\n          26.1,\n          27.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e1d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.168308894960689,\n        \"min\": 20.4,\n        \"max\": 29.2,\n        \"num_unique_values\": 24,\n        \"samples\": [\n          24.2,\n          28.1,\n          27.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e2b\\u0e19\\u0e32\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4787685888046898,\n        \"min\": 19.0,\n        \"max\": 27.8,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          24.2,\n          26.8,\n          25.1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406671102.7252016,\n        \"min\": 70863620.0,\n        \"max\": 2379281080.0,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          621118194.0,\n          346833979.0,\n          373365696.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e01\\u0e34\\u0e08\\u0e01\\u0e32\\u0e23\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2125247352.4114184,\n        \"min\": 77035790.0,\n        \"max\": 11207935440.0,\n        \"num_unique_values\": 69,\n        \"samples\": [\n          680027415.0,\n          480646937.0,\n          670464240.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e19\\u0e49\\u0e33\\u0e21\\u0e31\\u0e19\\u0e17\\u0e35\\u0e48\\u0e43\\u0e0a\\u0e49\\n\\u0e01\\u0e31\\u0e1a\\u0e22\\u0e32\\u0e19\\u0e1e\\u0e32\\u0e2b\\u0e19\\u0e30\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 411885.845732189,\n        \"min\": 51905.71,\n        \"max\": 2580980.45,\n        \"num_unique_values\": 73,\n        \"samples\": [\n          828250.69,\n          794535.15,\n          139142.83\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e23\\u0e16\\u0e22\\u0e19\\u0e15\\u0e4c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1462938.4649610433,\n        \"min\": 356957.0,\n        \"max\": 7984867.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          4375122.0,\n          1435643.0,\n          1503196.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e02\\u0e19\\u0e2a\\u0e48\\u0e07\\u0e17\\u0e32\\u0e07\\u0e1a\\u0e01\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62982.3271307954,\n        \"min\": 5890.0,\n        \"max\": 302198.0,\n        \"num_unique_values\": 76,\n        \"samples\": [\n          151909.0,\n          50406.0,\n          40026.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e17\\u0e35\\u0e48\\u0e40\\u0e01\\u0e34\\u0e14\\u0e02\\u0e36\\u0e49\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 594.2752157925343,\n        \"min\": 175.0,\n        \"max\": 3120.0,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          1348.0,\n          560.0,\n          650.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e15\\u0e01\\u0e04\\u0e49\\u0e32\\u0e07\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 311060.26960977504,\n        \"min\": 150.0,\n        \"max\": 1930000.0,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          236160.0,\n          7400.0,\n          58280.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e1e\\u0e37\\u0e49\\u0e19\\u0e17\\u0e35\\u0e48\\n\\u0e2a\\u0e35\\u0e40\\u0e02\\u0e35\\u0e22\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 590.0322716631969,\n        \"min\": 0.08,\n        \"max\": 3747.66,\n        \"num_unique_values\": 66,\n        \"samples\": [\n          150.03,\n          77.48,\n          10.78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ตรวจสอบว่าคอลัมน์ใดมีค่าสูญหาย\n",
        "missing_columns = data2_cleaned.columns[data2_cleaned.isnull().any()]\n",
        "print(\"คอลัมน์ที่มีค่าสูญหาย:\", missing_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "okVLmAwaOlhA",
        "outputId": "ad0044a3-0a1c-4b39-d1d1-6d9897513c31"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "คอลัมน์ที่มีค่าสูญหาย: Index(['จังหวัด', 'จำนวน\\nโรงงาน', 'ปริมาณกาก\\nของเสีย', 'จำนวน\\nครัวเรือน',\n",
            "       'อุณหภูมิ', 'ฤดูร้อน', 'ฤดูฝน', 'ฤดูหนาว',\n",
            "       'ปริมาณการใช้\\nไฟฟ้าครัวเรือน', 'ปริมาณการใช้\\nไฟฟ้ากิจการ',\n",
            "       'ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ', 'จำนวนรถตาม\\nกฎหมายรถยนต์',\n",
            "       'จำนวนรถตาม\\nกฎหมายขนส่งทางบก', 'ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น',\n",
            "       'ปริมาณขยะมูลฝอย\\nตกค้าง', 'ปริมาณพื้นที่\\nสีเขียว'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# เลือกเฉพาะคอลัมน์ที่เป็นตัวเลขสำหรับการแทนค่าสูญหาย\n",
        "numeric_data = data2_cleaned.select_dtypes(include=[np.number])\n",
        "print(numeric_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nCSiqvAXOldk",
        "outputId": "dff31860-7ca2-4603-e98f-e2be9e2b0788"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  อุณหภูมิ  ฤดูร้อน  \\\n",
            "0             NaN                 NaN               NaN       NaN      NaN   \n",
            "1          2163.0              213.02          201080.0     27.45     28.0   \n",
            "2          6306.0           605710.18          359348.0     27.75     28.8   \n",
            "3          5599.0           903434.95          322190.0     26.70     26.9   \n",
            "4          3307.0            76728.47          285190.0     27.70     28.6   \n",
            "..            ...                 ...               ...       ...      ...   \n",
            "72         1231.0           371602.59          125118.0     25.90     26.1   \n",
            "73        10661.0             2760.01          548525.0     26.90     27.2   \n",
            "74         1651.0              148.67          175738.0     27.10     28.9   \n",
            "75         1065.0              155.70          129514.0     29.30     29.3   \n",
            "76        10625.0           176222.76          642015.0     27.00     27.4   \n",
            "\n",
            "    ฤดูฝน  ฤดูหนาว  ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
            "0     NaN      NaN                           NaN                        NaN   \n",
            "1    27.6     27.0                   346833979.0               4.806469e+08   \n",
            "2    28.3     26.4                   645373570.0               1.332767e+09   \n",
            "3    28.2     25.0                   383804304.0               4.538902e+08   \n",
            "4    28.4     26.1                   396833854.0               6.586475e+08   \n",
            "..    ...      ...                           ...                        ...   \n",
            "72   27.3     24.3                   127969544.0               1.415715e+08   \n",
            "73   28.4     25.1                           NaN                        NaN   \n",
            "74   29.0     26.4                   259438532.0               2.242610e+08   \n",
            "75   29.1     27.1                   193761157.0               1.498977e+08   \n",
            "76   28.1     25.6                   791639963.0               8.946301e+08   \n",
            "\n",
            "    ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
            "0                               NaN                       NaN   \n",
            "1                         211316.80                 1265888.0   \n",
            "2                         389608.80                 1974241.0   \n",
            "3                         180626.15                 1487255.0   \n",
            "4                         194569.75                 1783491.0   \n",
            "..                              ...                       ...   \n",
            "72                         79757.80                  646113.0   \n",
            "73                        755528.11                 3498893.0   \n",
            "74                        117704.91                 1318596.0   \n",
            "75                         73365.20                  892109.0   \n",
            "76                        408692.16                 3789170.0   \n",
            "\n",
            "    จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
            "0                            NaN                           NaN   \n",
            "1                        37108.0                         495.0   \n",
            "2                        99541.0                         657.0   \n",
            "3                        66852.0                         735.0   \n",
            "4                        97924.0                         514.0   \n",
            "..                           ...                           ...   \n",
            "72                       18494.0                         363.0   \n",
            "73                      117679.0                        1368.0   \n",
            "74                       32805.0                         423.0   \n",
            "75                       36778.0                         243.0   \n",
            "76                      109222.0                        1654.0   \n",
            "\n",
            "    ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
            "0                       NaN                     NaN  \n",
            "1                   58280.0                   10.78  \n",
            "2                  109475.0                  525.13  \n",
            "3                   90050.0                   42.18  \n",
            "4                   20000.0                   11.34  \n",
            "..                      ...                     ...  \n",
            "72                 110500.0                   77.48  \n",
            "73                   1570.0                  655.43  \n",
            "74                   1570.0                   45.11  \n",
            "75                   1000.0                     NaN  \n",
            "76                   8000.0                   14.69  \n",
            "\n",
            "[77 rows x 15 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ใช้ KNNImputer\n",
        "imputer = KNNImputer(n_neighbors=3, weights=\"distance\")\n",
        "imputed_data = imputer.fit_transform(numeric_data)\n",
        "print(imputed_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iXzteujgOyEP",
        "outputId": "2b619c3c-9945-4a3e-bb8e-13948362c8d2"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[5.84081579e+03 1.86624704e+05 3.28823750e+05 ... 7.56855263e+02\n",
            "  1.54664766e+05 2.64042576e+02]\n",
            " [2.16300000e+03 2.13020000e+02 2.01080000e+05 ... 4.95000000e+02\n",
            "  5.82800000e+04 1.07800000e+01]\n",
            " [6.30600000e+03 6.05710180e+05 3.59348000e+05 ... 6.57000000e+02\n",
            "  1.09475000e+05 5.25130000e+02]\n",
            " ...\n",
            " [1.65100000e+03 1.48670000e+02 1.75738000e+05 ... 4.23000000e+02\n",
            "  1.57000000e+03 4.51100000e+01]\n",
            " [1.06500000e+03 1.55700000e+02 1.29514000e+05 ... 2.43000000e+02\n",
            "  1.00000000e+03 3.94142594e+02]\n",
            " [1.06250000e+04 1.76222760e+05 6.42015000e+05 ... 1.65400000e+03\n",
            "  8.00000000e+03 1.46900000e+01]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงกลับเป็น DataFrame\n",
        "imputed_df = pd.DataFrame(imputed_data, columns=numeric_data.columns)"
      ],
      "metadata": {
        "id": "ikPtLGGZOx3X"
      },
      "execution_count": 21,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# แสดงตัวอย่างข้อมูลหลังจากการแทนค่าสูญหาย\n",
        "imputed_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 261
        },
        "id": "AznguQBqO3Zj",
        "outputId": "ba2e4bad-e173-492a-b055-d0b57ea9f100"
      },
      "execution_count": 22,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน   อุณหภูมิ   ฤดูร้อน  \\\n",
              "0    5840.815789       186624.703816         328823.75  27.104648  27.65493   \n",
              "1    2163.000000          213.020000         201080.00  27.450000  28.00000   \n",
              "2    6306.000000       605710.180000         359348.00  27.750000  28.80000   \n",
              "3    5599.000000       903434.950000         322190.00  26.700000  26.90000   \n",
              "4    3307.000000        76728.470000         285190.00  27.700000  28.60000   \n",
              "\n",
              "      ฤดูฝน    ฤดูหนาว  ปริมาณการใช้\\nไฟฟ้าครัวเรือน  \\\n",
              "0  27.98169  25.784507                  4.997224e+08   \n",
              "1  27.60000  27.000000                  3.468340e+08   \n",
              "2  28.30000  26.400000                  6.453736e+08   \n",
              "3  28.20000  25.000000                  3.838043e+08   \n",
              "4  28.40000  26.100000                  3.968339e+08   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้ากิจการ  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  \\\n",
              "0               1.327068e+09                    387582.251316   \n",
              "1               4.806469e+08                    211316.800000   \n",
              "2               1.332767e+09                    389608.800000   \n",
              "3               4.538902e+08                    180626.150000   \n",
              "4               6.586475e+08                    194569.750000   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายรถยนต์  จำนวนรถตาม\\nกฎหมายขนส่งทางบก  \\\n",
              "0              1.934265e+06                  77010.447368   \n",
              "1              1.265888e+06                  37108.000000   \n",
              "2              1.974241e+06                  99541.000000   \n",
              "3              1.487255e+06                  66852.000000   \n",
              "4              1.783491e+06                  97924.000000   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  ปริมาณขยะมูลฝอย\\nตกค้าง  \\\n",
              "0                    756.855263            154664.765625   \n",
              "1                    495.000000             58280.000000   \n",
              "2                    657.000000            109475.000000   \n",
              "3                    735.000000             90050.000000   \n",
              "4                    514.000000             20000.000000   \n",
              "\n",
              "   ปริมาณพื้นที่\\nสีเขียว  \n",
              "0              264.042576  \n",
              "1               10.780000  \n",
              "2              525.130000  \n",
              "3               42.180000  \n",
              "4               11.340000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f1007567-2c9a-474b-896c-4401a3cd3186\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>อุณหภูมิ</th>\n",
              "      <th>ฤดูร้อน</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>5840.815789</td>\n",
              "      <td>186624.703816</td>\n",
              "      <td>328823.75</td>\n",
              "      <td>27.104648</td>\n",
              "      <td>27.65493</td>\n",
              "      <td>27.98169</td>\n",
              "      <td>25.784507</td>\n",
              "      <td>4.997224e+08</td>\n",
              "      <td>1.327068e+09</td>\n",
              "      <td>387582.251316</td>\n",
              "      <td>1.934265e+06</td>\n",
              "      <td>77010.447368</td>\n",
              "      <td>756.855263</td>\n",
              "      <td>154664.765625</td>\n",
              "      <td>264.042576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2163.000000</td>\n",
              "      <td>213.020000</td>\n",
              "      <td>201080.00</td>\n",
              "      <td>27.450000</td>\n",
              "      <td>28.00000</td>\n",
              "      <td>27.60000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>3.468340e+08</td>\n",
              "      <td>4.806469e+08</td>\n",
              "      <td>211316.800000</td>\n",
              "      <td>1.265888e+06</td>\n",
              "      <td>37108.000000</td>\n",
              "      <td>495.000000</td>\n",
              "      <td>58280.000000</td>\n",
              "      <td>10.780000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>6306.000000</td>\n",
              "      <td>605710.180000</td>\n",
              "      <td>359348.00</td>\n",
              "      <td>27.750000</td>\n",
              "      <td>28.80000</td>\n",
              "      <td>28.30000</td>\n",
              "      <td>26.400000</td>\n",
              "      <td>6.453736e+08</td>\n",
              "      <td>1.332767e+09</td>\n",
              "      <td>389608.800000</td>\n",
              "      <td>1.974241e+06</td>\n",
              "      <td>99541.000000</td>\n",
              "      <td>657.000000</td>\n",
              "      <td>109475.000000</td>\n",
              "      <td>525.130000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>5599.000000</td>\n",
              "      <td>903434.950000</td>\n",
              "      <td>322190.00</td>\n",
              "      <td>26.700000</td>\n",
              "      <td>26.90000</td>\n",
              "      <td>28.20000</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>3.838043e+08</td>\n",
              "      <td>4.538902e+08</td>\n",
              "      <td>180626.150000</td>\n",
              "      <td>1.487255e+06</td>\n",
              "      <td>66852.000000</td>\n",
              "      <td>735.000000</td>\n",
              "      <td>90050.000000</td>\n",
              "      <td>42.180000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>3307.000000</td>\n",
              "      <td>76728.470000</td>\n",
              "      <td>285190.00</td>\n",
              "      <td>27.700000</td>\n",
              "      <td>28.60000</td>\n",
              "      <td>28.40000</td>\n",
              "      <td>26.100000</td>\n",
              "      <td>3.968339e+08</td>\n",
              "      <td>6.586475e+08</td>\n",
              "      <td>194569.750000</td>\n",
              "      <td>1.783491e+06</td>\n",
              "      <td>97924.000000</td>\n",
              "      <td>514.000000</td>\n",
              "      <td>20000.000000</td>\n",
              "      <td>11.340000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f1007567-2c9a-474b-896c-4401a3cd3186')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f1007567-2c9a-474b-896c-4401a3cd3186 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f1007567-2c9a-474b-896c-4401a3cd3186');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7d68ba37-2e66-4c8d-aac8-d5667724cf16\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d68ba37-2e66-4c8d-aac8-d5667724cf16')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7d68ba37-2e66-4c8d-aac8-d5667724cf16 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "imputed_df",
              "summary": "{\n  \"name\": \"imputed_df\",\n  \"rows\": 77,\n  \"fields\": [\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e42\\u0e23\\u0e07\\u0e07\\u0e32\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6673.453003684245,\n        \"min\": 456.0,\n        \"max\": 36167.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          3307.0,\n          2542.0,\n          4066.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e01\\n\\u0e02\\u0e2d\\u0e07\\u0e40\\u0e2a\\u0e35\\u0e22\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 344846.3900412513,\n        \"min\": 13.32,\n        \"max\": 1586868.1,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          76728.47,\n          236.98,\n          71521.7\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\n\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 216169.49133274084,\n        \"min\": 75048.0,\n        \"max\": 1118807.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          285190.0,\n          202367.0,\n          413107.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e2d\\u0e38\\u0e13\\u0e2b\\u0e20\\u0e39\\u0e21\\u0e34\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.245324685126639,\n        \"min\": 19.9,\n        \"max\": 29.3,\n        \"num_unique_values\": 53,\n        \"samples\": [\n          26.666666666666668,\n          25.95,\n          27.95\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e23\\u0e49\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3202976809184057,\n        \"min\": 20.4,\n        \"max\": 29.4,\n        \"num_unique_values\": 39,\n        \"samples\": [\n          27.20826303601458,\n          27.1,\n          28.6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e1d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1345277249709704,\n        \"min\": 20.4,\n        \"max\": 29.2,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          28.7,\n          27.9,\n          29.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e24\\u0e14\\u0e39\\u0e2b\\u0e19\\u0e32\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.4566636509246493,\n        \"min\": 19.0,\n        \"max\": 27.8,\n        \"num_unique_values\": 43,\n        \"samples\": [\n          27.309767670377727,\n          24.0,\n          26.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e04\\u0e23\\u0e31\\u0e27\\u0e40\\u0e23\\u0e37\\u0e2d\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 421291802.42565346,\n        \"min\": 70863620.0,\n        \"max\": 2379281080.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          396833854.0,\n          288344777.0,\n          434959147.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e01\\u0e32\\u0e23\\u0e43\\u0e0a\\u0e49\\n\\u0e44\\u0e1f\\u0e1f\\u0e49\\u0e32\\u0e01\\u0e34\\u0e08\\u0e01\\u0e32\\u0e23\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2108367808.1850946,\n        \"min\": 77035790.0,\n        \"max\": 11207935440.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          658647531.0,\n          238801803.0,\n          449399155.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e19\\u0e49\\u0e33\\u0e21\\u0e31\\u0e19\\u0e17\\u0e35\\u0e48\\u0e43\\u0e0a\\u0e49\\n\\u0e01\\u0e31\\u0e1a\\u0e22\\u0e32\\u0e19\\u0e1e\\u0e32\\u0e2b\\u0e19\\u0e30\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 409167.097567039,\n        \"min\": 51905.71,\n        \"max\": 2580980.45,\n        \"num_unique_values\": 74,\n        \"samples\": [\n          194569.75,\n          430476.68,\n          737201.12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e23\\u0e16\\u0e22\\u0e19\\u0e15\\u0e4c\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1453281.9999269757,\n        \"min\": 356957.0,\n        \"max\": 7984867.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          1783491.0,\n          1243183.0,\n          1843038.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e08\\u0e33\\u0e19\\u0e27\\u0e19\\u0e23\\u0e16\\u0e15\\u0e32\\u0e21\\n\\u0e01\\u0e0e\\u0e2b\\u0e21\\u0e32\\u0e22\\u0e02\\u0e19\\u0e2a\\u0e48\\u0e07\\u0e17\\u0e32\\u0e07\\u0e1a\\u0e01\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 62566.59765599556,\n        \"min\": 5890.0,\n        \"max\": 302198.0,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          97924.0,\n          33922.0,\n          109038.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e17\\u0e35\\u0e48\\u0e40\\u0e01\\u0e34\\u0e14\\u0e02\\u0e36\\u0e49\\u0e19\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 590.3525642392672,\n        \"min\": 175.0,\n        \"max\": 3120.0,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          514.0,\n          186.0,\n          880.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e02\\u0e22\\u0e30\\u0e21\\u0e39\\u0e25\\u0e1d\\u0e2d\\u0e22\\n\\u0e15\\u0e01\\u0e04\\u0e49\\u0e32\\u0e07\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 363594.67806185846,\n        \"min\": 150.0,\n        \"max\": 1930000.0,\n        \"num_unique_values\": 75,\n        \"samples\": [\n          20000.0,\n          236160.0,\n          29400.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"\\u0e1b\\u0e23\\u0e34\\u0e21\\u0e32\\u0e13\\u0e1e\\u0e37\\u0e49\\u0e19\\u0e17\\u0e35\\u0e48\\n\\u0e2a\\u0e35\\u0e40\\u0e02\\u0e35\\u0e22\\u0e27\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 547.9805706689118,\n        \"min\": 0.08,\n        \"max\": 3747.66,\n        \"num_unique_values\": 77,\n        \"samples\": [\n          11.34,\n          0.08,\n          106.72\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##การบันทึกไฟล์"
      ],
      "metadata": {
        "id": "24p1NdxyOAiB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "output_path = 'Data2_Set_Imputed.xlsx'\n",
        "imputed_df.to_excel(output_path, index=False)\n",
        "print(\"ไฟล์ที่บันทึกแล้ว:\", output_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dw2YKsAzNzM_",
        "outputId": "2bcddf5f-29fe-466c-e19c-e2e70cf7c294"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ไฟล์ที่บันทึกแล้ว: Data2_Set_Imputed.xlsx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ดาวน์โหลดไฟล์ข้อมูล"
      ],
      "metadata": {
        "id": "Wzs6laUTN7Pg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('Data2_Set_Imputed.xlsx')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "H5956pmCOFzc",
        "outputId": "20d99d3e-93b0-4642-be5c-3e71ef7320ae"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_49c7c4b8-e93b-48eb-b569-b6b3867c042b\", \"Data2_Set_Imputed.xlsx\", 13545)"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##หาค่าสูญหายโดยลบตัวแปรของจังหวัดที่ครบทุกตัวแปร"
      ],
      "metadata": {
        "id": "UG_xuK6BPCOM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# เข้าถึงไฟล์ใน Google Drive\n",
        "data3 = pd.read_excel('/content/drive/MyDrive/Project เด็กอ.บี/ลบข้อมูลค่าสูญหายที่ครบ.xlsx')\n",
        "data3.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 325
        },
        "id": "7Ag81L2IPnyG",
        "outputId": "8fc72f0c-eb63-4267-bc9c-94f9a318aca0"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2  CO  O3  PM10  PM2.5  จำนวน\\nโรงงาน  \\\n",
              "0          NaN  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "1  \\tกำแพงเพชร  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "2  \\tเชียงใหม่  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "3         ตรัง  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "4         ตราด  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "\n",
              "   ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  ...  ฤดูฝน  ฤดูหนาว  \\\n",
              "0                 NaN               NaN  ...    NaN      NaN   \n",
              "1                 NaN               NaN  ...    NaN      NaN   \n",
              "2                 NaN               NaN  ...    NaN      NaN   \n",
              "3                 NaN               NaN  ...    NaN      NaN   \n",
              "4                 NaN               NaN  ...    NaN      NaN   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
              "0                           NaN                        NaN   \n",
              "1                           NaN                        NaN   \n",
              "2                           NaN                        NaN   \n",
              "3                           NaN                        NaN   \n",
              "4                           NaN                        NaN   \n",
              "\n",
              "   ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
              "0                              NaN                       NaN   \n",
              "1                              NaN                       NaN   \n",
              "2                              NaN                       NaN   \n",
              "3                              NaN                       NaN   \n",
              "4                              NaN                       NaN   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
              "0                           NaN                           NaN   \n",
              "1                           NaN                           NaN   \n",
              "2                           NaN                           NaN   \n",
              "3                           NaN                           NaN   \n",
              "4                           NaN                           NaN   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                      NaN                     NaN  \n",
              "1                      NaN                     NaN  \n",
              "2                      NaN                     NaN  \n",
              "3                      NaN                     NaN  \n",
              "4                      NaN                     NaN  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-35949705-7da9-41cb-88e6-9f6d4073f917\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>\\tเชียงใหม่</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ตรัง</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ตราด</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35949705-7da9-41cb-88e6-9f6d4073f917')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-35949705-7da9-41cb-88e6-9f6d4073f917 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-35949705-7da9-41cb-88e6-9f6d4073f917');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9306a3d3-743d-4353-818d-9439c1609fde\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9306a3d3-743d-4353-818d-9439c1609fde')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9306a3d3-743d-4353-818d-9439c1609fde button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data3"
            }
          },
          "metadata": {},
          "execution_count": 25
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงค่าที่เป็น '-' หรือ '\\t' ให้เป็น NaN\n",
        "data3_cleaned = data3.replace(['-', '\\t', ' '], np.nan)\n",
        "data3_cleaned.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 325
        },
        "id": "Zu52ck_oPnjg",
        "outputId": "e87f998b-d040-44e4-9971-14c45d5c7595"
      },
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       จังหวัด  SO2  NO2  CO  O3  PM10  PM2.5  จำนวน\\nโรงงาน  \\\n",
              "0          NaN  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "1  \\tกำแพงเพชร  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "2  \\tเชียงใหม่  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "3         ตรัง  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "4         ตราด  NaN  NaN NaN NaN   NaN    NaN            NaN   \n",
              "\n",
              "   ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน  ...  ฤดูฝน  ฤดูหนาว  \\\n",
              "0                 NaN               NaN  ...    NaN      NaN   \n",
              "1                 NaN               NaN  ...    NaN      NaN   \n",
              "2                 NaN               NaN  ...    NaN      NaN   \n",
              "3                 NaN               NaN  ...    NaN      NaN   \n",
              "4                 NaN               NaN  ...    NaN      NaN   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
              "0                           NaN                        NaN   \n",
              "1                           NaN                        NaN   \n",
              "2                           NaN                        NaN   \n",
              "3                           NaN                        NaN   \n",
              "4                           NaN                        NaN   \n",
              "\n",
              "   ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
              "0                              NaN                       NaN   \n",
              "1                              NaN                       NaN   \n",
              "2                              NaN                       NaN   \n",
              "3                              NaN                       NaN   \n",
              "4                              NaN                       NaN   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
              "0                           NaN                           NaN   \n",
              "1                           NaN                           NaN   \n",
              "2                           NaN                           NaN   \n",
              "3                           NaN                           NaN   \n",
              "4                           NaN                           NaN   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
              "0                      NaN                     NaN  \n",
              "1                      NaN                     NaN  \n",
              "2                      NaN                     NaN  \n",
              "3                      NaN                     NaN  \n",
              "4                      NaN                     NaN  \n",
              "\n",
              "[5 rows x 22 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e9d6046f-706b-4157-b5bc-293e516a438a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>จังหวัด</th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>\\tกำแพงเพชร</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>\\tเชียงใหม่</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>ตรัง</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>ตราด</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 22 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9d6046f-706b-4157-b5bc-293e516a438a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-e9d6046f-706b-4157-b5bc-293e516a438a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-e9d6046f-706b-4157-b5bc-293e516a438a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-41a966fe-af04-46af-bc41-0c4040a64854\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41a966fe-af04-46af-bc41-0c4040a64854')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-41a966fe-af04-46af-bc41-0c4040a64854 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "data3_cleaned"
            }
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ตรวจสอบว่าคอลัมน์ใดมีค่าสูญหาย\n",
        "missing_columns = data3_cleaned.columns[data3_cleaned.isnull().any()]\n",
        "print(\"คอลัมน์ที่มีค่าสูญหาย:\", missing_columns)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IFvlrG1vPngW",
        "outputId": "74ccb383-1fce-4967-d59e-69368ba6d43c"
      },
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "คอลัมน์ที่มีค่าสูญหาย: Index(['จังหวัด', 'SO2', 'NO2', 'CO', 'O3', 'PM10', 'PM2.5', 'จำนวน\\nโรงงาน',\n",
            "       'ปริมาณกาก\\nของเสีย', 'จำนวน\\nครัวเรือน', 'อุณหภูมิ', 'ฤดูร้อน',\n",
            "       'ฤดูฝน', 'ฤดูหนาว', 'ปริมาณการใช้\\nไฟฟ้าครัวเรือน',\n",
            "       'ปริมาณการใช้\\nไฟฟ้ากิจการ', 'ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ',\n",
            "       'จำนวนรถตาม\\nกฎหมายรถยนต์', 'จำนวนรถตาม\\nกฎหมายขนส่งทางบก',\n",
            "       'ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น', 'ปริมาณขยะมูลฝอย\\nตกค้าง',\n",
            "       'ปริมาณพื้นที่\\nสีเขียว'],\n",
            "      dtype='object')\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# เลือกเฉพาะคอลัมน์ที่เป็นตัวเลขสำหรับการแทนค่าสูญหาย\n",
        "numeric_data = data3_cleaned.select_dtypes(include=[np.number])\n",
        "print(numeric_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FdYO4ovNPndU",
        "outputId": "3015d677-d317-4b3e-e39e-605143a8dc80"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    SO2   NO2    CO    O3  PM10  PM2.5  จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  \\\n",
            "0   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "1   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "2   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "3   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "4   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "5   NaN   NaN   NaN   NaN   NaN    NaN            NaN                 NaN   \n",
            "6   1.0   6.0  0.21  28.0  36.0   21.0         1715.0               79.70   \n",
            "7   0.0   6.0  0.32  15.0  35.0   15.0         6452.0             5834.25   \n",
            "8   1.0  10.0  0.77  29.0  41.0   20.0         5828.0             4910.27   \n",
            "9   0.0   3.0  0.18  27.0  23.0   12.0         4641.0           164302.44   \n",
            "10  2.0  12.0  0.37  22.0  44.0   21.0        17738.0           442702.06   \n",
            "11  0.0  11.0  0.36  23.0  36.0   19.0         2853.0            20043.01   \n",
            "12  2.0   3.0  0.56  23.0  35.0   17.0         2438.0            50679.30   \n",
            "13  1.0   5.0  0.26  19.0  27.0   25.0         4036.0            46551.57   \n",
            "14  1.0   3.0  0.29  29.0  27.0   14.0         1268.0              267.50   \n",
            "15  1.0  16.0  0.49  17.0  36.0   16.0         3804.0           110767.95   \n",
            "16  1.0   3.0  0.16  23.0  35.0   21.0         2958.0          1188744.00   \n",
            "17  1.0   4.0  0.48  26.0  26.0   17.0         5809.0              262.74   \n",
            "18  1.0   7.0  0.11  16.0  34.0   16.0         7561.0            56836.63   \n",
            "19  0.0   3.0  0.08  21.0  31.0   16.0         2250.0              437.50   \n",
            "20  1.0   7.0  0.48  20.0  36.0   20.0         4327.0           449210.64   \n",
            "21  0.0   7.0  0.35  24.0  41.0   23.0         1651.0              148.67   \n",
            "22  3.0   6.0  0.30  27.0  32.0   19.0        10625.0           176222.76   \n",
            "\n",
            "    จำนวน\\nครัวเรือน   อุณหภูมิ  ...  ฤดูฝน  ฤดูหนาว  \\\n",
            "0                NaN        NaN  ...    NaN      NaN   \n",
            "1                NaN        NaN  ...    NaN      NaN   \n",
            "2                NaN        NaN  ...    NaN      NaN   \n",
            "3                NaN        NaN  ...    NaN      NaN   \n",
            "4                NaN        NaN  ...    NaN      NaN   \n",
            "5                NaN        NaN  ...    NaN      NaN   \n",
            "6           239861.0  26.050000  ...   28.0     24.2   \n",
            "7           599937.0  27.266667  ...   27.8     26.5   \n",
            "8           429988.0  28.050000  ...   28.5     26.7   \n",
            "9           490644.0  26.650000  ...   27.8     25.0   \n",
            "10          677046.0  28.800000  ...   29.2     27.8   \n",
            "11          282967.0  27.600000  ...   28.3     26.5   \n",
            "12          202835.0  28.100000  ...   28.6     26.9   \n",
            "13          373933.0  27.566667  ...   28.2     26.1   \n",
            "14          122358.0  26.600000  ...   28.4     24.9   \n",
            "15          299270.0  28.100000  ...   28.8     26.6   \n",
            "16          234063.0  25.750000  ...   27.5     23.8   \n",
            "17          402016.0  25.950000  ...   28.0     24.2   \n",
            "18          572645.0  27.500000  ...   28.0     26.7   \n",
            "19          224948.0  27.950000  ...   28.8     26.4   \n",
            "20          315286.0  28.350000  ...   29.2     27.0   \n",
            "21          175738.0  27.100000  ...   29.0     26.4   \n",
            "22          642015.0  27.000000  ...   28.1     25.6   \n",
            "\n",
            "    ปริมาณการใช้\\nไฟฟ้าครัวเรือน  ปริมาณการใช้\\nไฟฟ้ากิจการ  \\\n",
            "0                            NaN                        NaN   \n",
            "1                            NaN                        NaN   \n",
            "2                            NaN                        NaN   \n",
            "3                            NaN                        NaN   \n",
            "4                            NaN                        NaN   \n",
            "5                            NaN                        NaN   \n",
            "6                   2.814871e+08               2.154967e+08   \n",
            "7                   9.316980e+08               9.468960e+08   \n",
            "8                   6.862553e+08               8.678194e+08   \n",
            "9                   6.211182e+08               6.800274e+08   \n",
            "10                  1.938900e+09               5.764344e+09   \n",
            "11                  5.306336e+08               1.119373e+09   \n",
            "12                  3.406298e+08               3.330740e+08   \n",
            "13                  4.848469e+08               5.990177e+08   \n",
            "14                  1.347443e+08               2.025202e+08   \n",
            "15                  5.255767e+08               1.878330e+09   \n",
            "16                  2.655782e+08               2.910463e+08   \n",
            "17                  4.481598e+08               3.769719e+08   \n",
            "18                  1.017343e+09               2.470857e+09   \n",
            "19                  3.246619e+08               2.506154e+08   \n",
            "20                  6.177425e+08               9.165278e+08   \n",
            "21                  2.594385e+08               2.242610e+08   \n",
            "22                  7.916400e+08               8.946301e+08   \n",
            "\n",
            "    ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  จำนวนรถตาม\\nกฎหมายรถยนต์  \\\n",
            "0                               NaN                       NaN   \n",
            "1                               NaN                       NaN   \n",
            "2                               NaN                       NaN   \n",
            "3                               NaN                       NaN   \n",
            "4                               NaN                       NaN   \n",
            "5                               NaN                       NaN   \n",
            "6                         139142.83                 1103327.0   \n",
            "7                         596200.63                 3155611.0   \n",
            "8                         492712.18                 2855054.0   \n",
            "9                         371717.98                 2585266.0   \n",
            "10                       1079484.80                  746991.0   \n",
            "11                        316615.45                 1675791.0   \n",
            "12                        168165.91                 1435643.0   \n",
            "13                        249189.47                 2338718.0   \n",
            "14                         86811.46                  832759.0   \n",
            "15                        262194.11                 2116014.0   \n",
            "16                        167550.20                 1399180.0   \n",
            "17                        139142.83                 2534130.0   \n",
            "18                       1152166.28                 4191564.0   \n",
            "19                        164471.82                 1601081.0   \n",
            "20                        430476.68                 2370590.0   \n",
            "21                        117704.91                 1318596.0   \n",
            "22                        408692.16                 3789170.0   \n",
            "\n",
            "    จำนวนรถตาม\\nกฎหมายขนส่งทางบก  ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  \\\n",
            "0                            NaN                           NaN   \n",
            "1                            NaN                           NaN   \n",
            "2                            NaN                           NaN   \n",
            "3                            NaN                           NaN   \n",
            "4                            NaN                           NaN   \n",
            "5                            NaN                           NaN   \n",
            "6                        28822.0                         650.0   \n",
            "7                        82137.0                        1402.0   \n",
            "8                       130309.0                         836.0   \n",
            "9                       106785.0                        1072.0   \n",
            "10                      117049.0                        1950.0   \n",
            "11                       58200.0                         612.0   \n",
            "12                       50406.0                         336.0   \n",
            "13                       75227.0                         587.0   \n",
            "14                       26614.0                         260.0   \n",
            "15                       86729.0                         795.0   \n",
            "16                       61506.0                         630.0   \n",
            "17                       49561.0                         843.0   \n",
            "18                      126548.0                        1207.0   \n",
            "19                       56837.0                         560.0   \n",
            "20                      147684.0                         786.0   \n",
            "21                       32805.0                         423.0   \n",
            "22                      109222.0                        1654.0   \n",
            "\n",
            "    ปริมาณขยะมูลฝอย\\nตกค้าง  ปริมาณพื้นที่\\nสีเขียว  \n",
            "0                       NaN                     NaN  \n",
            "1                       NaN                     NaN  \n",
            "2                       NaN                     NaN  \n",
            "3                       NaN                     NaN  \n",
            "4                       NaN                     NaN  \n",
            "5                       NaN                     NaN  \n",
            "6                    4650.0                   10.57  \n",
            "7                 1346950.0                    0.36  \n",
            "8                   19120.0                 1009.95  \n",
            "9                    9170.0                 3747.66  \n",
            "10                 131760.0                    5.46  \n",
            "11                  22200.0                    6.69  \n",
            "12                   9645.0                 2172.13  \n",
            "13                  31000.0                   99.31  \n",
            "14                 294150.0                    8.00  \n",
            "15                 310060.0                   11.80  \n",
            "16                 259960.0                  210.28  \n",
            "17                   4470.0                  229.01  \n",
            "18                 141870.0                  129.07  \n",
            "19                  60000.0                   33.05  \n",
            "20                  81450.0                   53.61  \n",
            "21                   1570.0                   45.11  \n",
            "22                   8000.0                   14.69  \n",
            "\n",
            "[23 rows x 21 columns]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# ใช้ KNNImputer\n",
        "imputer = KNNImputer(n_neighbors=3, weights=\"distance\")\n",
        "imputed_data = imputer.fit_transform(numeric_data)\n",
        "print(imputed_data)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_x5uu0kAPnaW",
        "outputId": "124af1ce-bd14-4352-e5b7-b1efb7c6cc43"
      },
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [9.41176471e-01 6.58823529e+00 3.39411765e-01 2.28823529e+01\n",
            "  3.38235294e+01 1.83529412e+01 5.05611765e+03 1.59882411e+05\n",
            "  3.69738235e+05 2.73166667e+01 2.78764706e+01 2.83647059e+01\n",
            "  2.59588235e+01 6.00026678e+08 1.06069457e+09 3.73084688e+05\n",
            "  2.12055794e+06 7.92024118e+04 8.59000000e+02 1.60942647e+05\n",
            "  4.58044118e+02]\n",
            " [1.00000000e+00 6.00000000e+00 2.10000000e-01 2.80000000e+01\n",
            "  3.60000000e+01 2.10000000e+01 1.71500000e+03 7.97000000e+01\n",
            "  2.39861000e+05 2.60500000e+01 2.61000000e+01 2.80000000e+01\n",
            "  2.42000000e+01 2.81487141e+08 2.15496687e+08 1.39142830e+05\n",
            "  1.10332700e+06 2.88220000e+04 6.50000000e+02 4.65000000e+03\n",
            "  1.05700000e+01]\n",
            " [0.00000000e+00 6.00000000e+00 3.20000000e-01 1.50000000e+01\n",
            "  3.50000000e+01 1.50000000e+01 6.45200000e+03 5.83425000e+03\n",
            "  5.99937000e+05 2.72666667e+01 2.76000000e+01 2.78000000e+01\n",
            "  2.65000000e+01 9.31697974e+08 9.46896011e+08 5.96200630e+05\n",
            "  3.15561100e+06 8.21370000e+04 1.40200000e+03 1.34695000e+06\n",
            "  3.60000000e-01]\n",
            " [1.00000000e+00 1.00000000e+01 7.70000000e-01 2.90000000e+01\n",
            "  4.10000000e+01 2.00000000e+01 5.82800000e+03 4.91027000e+03\n",
            "  4.29988000e+05 2.80500000e+01 2.90000000e+01 2.85000000e+01\n",
            "  2.67000000e+01 6.86255308e+08 8.67819406e+08 4.92712180e+05\n",
            "  2.85505400e+06 1.30309000e+05 8.36000000e+02 1.91200000e+04\n",
            "  1.00995000e+03]\n",
            " [0.00000000e+00 3.00000000e+00 1.80000000e-01 2.70000000e+01\n",
            "  2.30000000e+01 1.20000000e+01 4.64100000e+03 1.64302440e+05\n",
            "  4.90644000e+05 2.66500000e+01 2.73000000e+01 2.78000000e+01\n",
            "  2.50000000e+01 6.21118194e+08 6.80027415e+08 3.71717980e+05\n",
            "  2.58526600e+06 1.06785000e+05 1.07200000e+03 9.17000000e+03\n",
            "  3.74766000e+03]\n",
            " [2.00000000e+00 1.20000000e+01 3.70000000e-01 2.20000000e+01\n",
            "  4.40000000e+01 2.10000000e+01 1.77380000e+04 4.42702060e+05\n",
            "  6.77046000e+05 2.88000000e+01 2.94000000e+01 2.92000000e+01\n",
            "  2.78000000e+01 1.93889963e+09 5.76434384e+09 1.07948480e+06\n",
            "  7.46991000e+05 1.17049000e+05 1.95000000e+03 1.31760000e+05\n",
            "  5.46000000e+00]\n",
            " [0.00000000e+00 1.10000000e+01 3.60000000e-01 2.30000000e+01\n",
            "  3.60000000e+01 1.90000000e+01 2.85300000e+03 2.00430100e+04\n",
            "  2.82967000e+05 2.76000000e+01 2.80000000e+01 2.83000000e+01\n",
            "  2.65000000e+01 5.30633550e+08 1.11937276e+09 3.16615450e+05\n",
            "  1.67579100e+06 5.82000000e+04 6.12000000e+02 2.22000000e+04\n",
            "  6.69000000e+00]\n",
            " [2.00000000e+00 3.00000000e+00 5.60000000e-01 2.30000000e+01\n",
            "  3.50000000e+01 1.70000000e+01 2.43800000e+03 5.06793000e+04\n",
            "  2.02835000e+05 2.81000000e+01 2.87000000e+01 2.86000000e+01\n",
            "  2.69000000e+01 3.40629777e+08 3.33074032e+08 1.68165910e+05\n",
            "  1.43564300e+06 5.04060000e+04 3.36000000e+02 9.64500000e+03\n",
            "  2.17213000e+03]\n",
            " [1.00000000e+00 5.00000000e+00 2.60000000e-01 1.90000000e+01\n",
            "  2.70000000e+01 2.50000000e+01 4.03600000e+03 4.65515700e+04\n",
            "  3.73933000e+05 2.75666667e+01 2.83000000e+01 2.82000000e+01\n",
            "  2.61000000e+01 4.84846914e+08 5.99017712e+08 2.49189470e+05\n",
            "  2.33871800e+06 7.52270000e+04 5.87000000e+02 3.10000000e+04\n",
            "  9.93100000e+01]\n",
            " [1.00000000e+00 3.00000000e+00 2.90000000e-01 2.90000000e+01\n",
            "  2.70000000e+01 1.40000000e+01 1.26800000e+03 2.67500000e+02\n",
            "  1.22358000e+05 2.66000000e+01 2.66000000e+01 2.84000000e+01\n",
            "  2.49000000e+01 1.34744304e+08 2.02520163e+08 8.68114600e+04\n",
            "  8.32759000e+05 2.66140000e+04 2.60000000e+02 2.94150000e+05\n",
            "  8.00000000e+00]\n",
            " [1.00000000e+00 1.60000000e+01 4.90000000e-01 1.70000000e+01\n",
            "  3.60000000e+01 1.60000000e+01 3.80400000e+03 1.10767950e+05\n",
            "  2.99270000e+05 2.81000000e+01 2.89000000e+01 2.88000000e+01\n",
            "  2.66000000e+01 5.25576725e+08 1.87833046e+09 2.62194110e+05\n",
            "  2.11601400e+06 8.67290000e+04 7.95000000e+02 3.10060000e+05\n",
            "  1.18000000e+01]\n",
            " [1.00000000e+00 3.00000000e+00 1.60000000e-01 2.30000000e+01\n",
            "  3.50000000e+01 2.10000000e+01 2.95800000e+03 1.18874400e+06\n",
            "  2.34063000e+05 2.57500000e+01 2.60000000e+01 2.75000000e+01\n",
            "  2.38000000e+01 2.65578208e+08 2.91046320e+08 1.67550200e+05\n",
            "  1.39918000e+06 6.15060000e+04 6.30000000e+02 2.59960000e+05\n",
            "  2.10280000e+02]\n",
            " [1.00000000e+00 4.00000000e+00 4.80000000e-01 2.60000000e+01\n",
            "  2.60000000e+01 1.70000000e+01 5.80900000e+03 2.62740000e+02\n",
            "  4.02016000e+05 2.59500000e+01 2.58000000e+01 2.80000000e+01\n",
            "  2.42000000e+01 4.48159756e+08 3.76971943e+08 1.39142830e+05\n",
            "  2.53413000e+06 4.95610000e+04 8.43000000e+02 4.47000000e+03\n",
            "  2.29010000e+02]\n",
            " [1.00000000e+00 7.00000000e+00 1.10000000e-01 1.60000000e+01\n",
            "  3.40000000e+01 1.60000000e+01 7.56100000e+03 5.68366300e+04\n",
            "  5.72645000e+05 2.75000000e+01 2.80000000e+01 2.80000000e+01\n",
            "  2.67000000e+01 1.01734320e+09 2.47085665e+09 1.15216628e+06\n",
            "  4.19156400e+06 1.26548000e+05 1.20700000e+03 1.41870000e+05\n",
            "  1.29070000e+02]\n",
            " [0.00000000e+00 3.00000000e+00 8.00000000e-02 2.10000000e+01\n",
            "  3.10000000e+01 1.60000000e+01 2.25000000e+03 4.37500000e+02\n",
            "  2.24948000e+05 2.79500000e+01 2.88000000e+01 2.88000000e+01\n",
            "  2.64000000e+01 3.24661892e+08 2.50615367e+08 1.64471820e+05\n",
            "  1.60108100e+06 5.68370000e+04 5.60000000e+02 6.00000000e+04\n",
            "  3.30500000e+01]\n",
            " [1.00000000e+00 7.00000000e+00 4.80000000e-01 2.00000000e+01\n",
            "  3.60000000e+01 2.00000000e+01 4.32700000e+03 4.49210640e+05\n",
            "  3.15286000e+05 2.83500000e+01 2.91000000e+01 2.92000000e+01\n",
            "  2.70000000e+01 6.17742456e+08 9.16527796e+08 4.30476680e+05\n",
            "  2.37059000e+06 1.47684000e+05 7.86000000e+02 8.14500000e+04\n",
            "  5.36100000e+01]\n",
            " [0.00000000e+00 7.00000000e+00 3.50000000e-01 2.40000000e+01\n",
            "  4.10000000e+01 2.30000000e+01 1.65100000e+03 1.48670000e+02\n",
            "  1.75738000e+05 2.71000000e+01 2.89000000e+01 2.90000000e+01\n",
            "  2.64000000e+01 2.59438532e+08 2.24260983e+08 1.17704910e+05\n",
            "  1.31859600e+06 3.28050000e+04 4.23000000e+02 1.57000000e+03\n",
            "  4.51100000e+01]\n",
            " [3.00000000e+00 6.00000000e+00 3.00000000e-01 2.70000000e+01\n",
            "  3.20000000e+01 1.90000000e+01 1.06250000e+04 1.76222760e+05\n",
            "  6.42015000e+05 2.70000000e+01 2.74000000e+01 2.81000000e+01\n",
            "  2.56000000e+01 7.91639963e+08 8.94630096e+08 4.08692160e+05\n",
            "  3.78917000e+06 1.09222000e+05 1.65400000e+03 8.00000000e+03\n",
            "  1.46900000e+01]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# แปลงกลับเป็น DataFrame\n",
        "imputed_df = pd.DataFrame(imputed_data, columns=numeric_data.columns)"
      ],
      "metadata": {
        "id": "uV5m8M0ePnXK"
      },
      "execution_count": 30,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# แสดงตัวอย่างข้อมูลหลังจากการแทนค่าสูญหาย\n",
        "imputed_df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 307
        },
        "id": "FEm873ZxPnUO",
        "outputId": "4ea14042-adfc-49d2-fb75-fc4a47b863ce"
      },
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        SO2       NO2        CO         O3       PM10      PM2.5  \\\n",
              "0  0.941176  6.588235  0.339412  22.882353  33.823529  18.352941   \n",
              "1  0.941176  6.588235  0.339412  22.882353  33.823529  18.352941   \n",
              "2  0.941176  6.588235  0.339412  22.882353  33.823529  18.352941   \n",
              "3  0.941176  6.588235  0.339412  22.882353  33.823529  18.352941   \n",
              "4  0.941176  6.588235  0.339412  22.882353  33.823529  18.352941   \n",
              "\n",
              "   จำนวน\\nโรงงาน  ปริมาณกาก\\nของเสีย  จำนวน\\nครัวเรือน   อุณหภูมิ  ...  \\\n",
              "0    5056.117647       159882.411176     369738.235294  27.316667  ...   \n",
              "1    5056.117647       159882.411176     369738.235294  27.316667  ...   \n",
              "2    5056.117647       159882.411176     369738.235294  27.316667  ...   \n",
              "3    5056.117647       159882.411176     369738.235294  27.316667  ...   \n",
              "4    5056.117647       159882.411176     369738.235294  27.316667  ...   \n",
              "\n",
              "       ฤดูฝน    ฤดูหนาว  ปริมาณการใช้\\nไฟฟ้าครัวเรือน  \\\n",
              "0  28.364706  25.958824                  6.000267e+08   \n",
              "1  28.364706  25.958824                  6.000267e+08   \n",
              "2  28.364706  25.958824                  6.000267e+08   \n",
              "3  28.364706  25.958824                  6.000267e+08   \n",
              "4  28.364706  25.958824                  6.000267e+08   \n",
              "\n",
              "   ปริมาณการใช้\\nไฟฟ้ากิจการ  ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ  \\\n",
              "0               1.060695e+09                    373084.688235   \n",
              "1               1.060695e+09                    373084.688235   \n",
              "2               1.060695e+09                    373084.688235   \n",
              "3               1.060695e+09                    373084.688235   \n",
              "4               1.060695e+09                    373084.688235   \n",
              "\n",
              "   จำนวนรถตาม\\nกฎหมายรถยนต์  จำนวนรถตาม\\nกฎหมายขนส่งทางบก  \\\n",
              "0              2.120558e+06                  79202.411765   \n",
              "1              2.120558e+06                  79202.411765   \n",
              "2              2.120558e+06                  79202.411765   \n",
              "3              2.120558e+06                  79202.411765   \n",
              "4              2.120558e+06                  79202.411765   \n",
              "\n",
              "   ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น  ปริมาณขยะมูลฝอย\\nตกค้าง  \\\n",
              "0                         859.0            160942.647059   \n",
              "1                         859.0            160942.647059   \n",
              "2                         859.0            160942.647059   \n",
              "3                         859.0            160942.647059   \n",
              "4                         859.0            160942.647059   \n",
              "\n",
              "   ปริมาณพื้นที่\\nสีเขียว  \n",
              "0              458.044118  \n",
              "1              458.044118  \n",
              "2              458.044118  \n",
              "3              458.044118  \n",
              "4              458.044118  \n",
              "\n",
              "[5 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b50841d-1e37-46c8-b3de-63bf6374347b\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SO2</th>\n",
              "      <th>NO2</th>\n",
              "      <th>CO</th>\n",
              "      <th>O3</th>\n",
              "      <th>PM10</th>\n",
              "      <th>PM2.5</th>\n",
              "      <th>จำนวน\\nโรงงาน</th>\n",
              "      <th>ปริมาณกาก\\nของเสีย</th>\n",
              "      <th>จำนวน\\nครัวเรือน</th>\n",
              "      <th>อุณหภูมิ</th>\n",
              "      <th>...</th>\n",
              "      <th>ฤดูฝน</th>\n",
              "      <th>ฤดูหนาว</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้าครัวเรือน</th>\n",
              "      <th>ปริมาณการใช้\\nไฟฟ้ากิจการ</th>\n",
              "      <th>ปริมาณน้ำมันที่ใช้\\nกับยานพาหนะ</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายรถยนต์</th>\n",
              "      <th>จำนวนรถตาม\\nกฎหมายขนส่งทางบก</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nที่เกิดขึ้น</th>\n",
              "      <th>ปริมาณขยะมูลฝอย\\nตกค้าง</th>\n",
              "      <th>ปริมาณพื้นที่\\nสีเขียว</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.941176</td>\n",
              "      <td>6.588235</td>\n",
              "      <td>0.339412</td>\n",
              "      <td>22.882353</td>\n",
              "      <td>33.823529</td>\n",
              "      <td>18.352941</td>\n",
              "      <td>5056.117647</td>\n",
              "      <td>159882.411176</td>\n",
              "      <td>369738.235294</td>\n",
              "      <td>27.316667</td>\n",
              "      <td>...</td>\n",
              "      <td>28.364706</td>\n",
              "      <td>25.958824</td>\n",
              "      <td>6.000267e+08</td>\n",
              "      <td>1.060695e+09</td>\n",
              "      <td>373084.688235</td>\n",
              "      <td>2.120558e+06</td>\n",
              "      <td>79202.411765</td>\n",
              "      <td>859.0</td>\n",
              "      <td>160942.647059</td>\n",
              "      <td>458.044118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.941176</td>\n",
              "      <td>6.588235</td>\n",
              "      <td>0.339412</td>\n",
              "      <td>22.882353</td>\n",
              "      <td>33.823529</td>\n",
              "      <td>18.352941</td>\n",
              "      <td>5056.117647</td>\n",
              "      <td>159882.411176</td>\n",
              "      <td>369738.235294</td>\n",
              "      <td>27.316667</td>\n",
              "      <td>...</td>\n",
              "      <td>28.364706</td>\n",
              "      <td>25.958824</td>\n",
              "      <td>6.000267e+08</td>\n",
              "      <td>1.060695e+09</td>\n",
              "      <td>373084.688235</td>\n",
              "      <td>2.120558e+06</td>\n",
              "      <td>79202.411765</td>\n",
              "      <td>859.0</td>\n",
              "      <td>160942.647059</td>\n",
              "      <td>458.044118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.941176</td>\n",
              "      <td>6.588235</td>\n",
              "      <td>0.339412</td>\n",
              "      <td>22.882353</td>\n",
              "      <td>33.823529</td>\n",
              "      <td>18.352941</td>\n",
              "      <td>5056.117647</td>\n",
              "      <td>159882.411176</td>\n",
              "      <td>369738.235294</td>\n",
              "      <td>27.316667</td>\n",
              "      <td>...</td>\n",
              "      <td>28.364706</td>\n",
              "      <td>25.958824</td>\n",
              "      <td>6.000267e+08</td>\n",
              "      <td>1.060695e+09</td>\n",
              "      <td>373084.688235</td>\n",
              "      <td>2.120558e+06</td>\n",
              "      <td>79202.411765</td>\n",
              "      <td>859.0</td>\n",
              "      <td>160942.647059</td>\n",
              "      <td>458.044118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0.941176</td>\n",
              "      <td>6.588235</td>\n",
              "      <td>0.339412</td>\n",
              "      <td>22.882353</td>\n",
              "      <td>33.823529</td>\n",
              "      <td>18.352941</td>\n",
              "      <td>5056.117647</td>\n",
              "      <td>159882.411176</td>\n",
              "      <td>369738.235294</td>\n",
              "      <td>27.316667</td>\n",
              "      <td>...</td>\n",
              "      <td>28.364706</td>\n",
              "      <td>25.958824</td>\n",
              "      <td>6.000267e+08</td>\n",
              "      <td>1.060695e+09</td>\n",
              "      <td>373084.688235</td>\n",
              "      <td>2.120558e+06</td>\n",
              "      <td>79202.411765</td>\n",
              "      <td>859.0</td>\n",
              "      <td>160942.647059</td>\n",
              "      <td>458.044118</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0.941176</td>\n",
              "      <td>6.588235</td>\n",
              "      <td>0.339412</td>\n",
              "      <td>22.882353</td>\n",
              "      <td>33.823529</td>\n",
              "      <td>18.352941</td>\n",
              "      <td>5056.117647</td>\n",
              "      <td>159882.411176</td>\n",
              "      <td>369738.235294</td>\n",
              "      <td>27.316667</td>\n",
              "      <td>...</td>\n",
              "      <td>28.364706</td>\n",
              "      <td>25.958824</td>\n",
              "      <td>6.000267e+08</td>\n",
              "      <td>1.060695e+09</td>\n",
              "      <td>373084.688235</td>\n",
              "      <td>2.120558e+06</td>\n",
              "      <td>79202.411765</td>\n",
              "      <td>859.0</td>\n",
              "      <td>160942.647059</td>\n",
              "      <td>458.044118</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b50841d-1e37-46c8-b3de-63bf6374347b')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0b50841d-1e37-46c8-b3de-63bf6374347b button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0b50841d-1e37-46c8-b3de-63bf6374347b');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b6a27361-e0e2-440a-9021-b13db4dceaa0\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b6a27361-e0e2-440a-9021-b13db4dceaa0')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b6a27361-e0e2-440a-9021-b13db4dceaa0 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "imputed_df"
            }
          },
          "metadata": {},
          "execution_count": 31
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##การบันทึกไฟล์"
      ],
      "metadata": {
        "id": "DmaNf3mdPdeh"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "output_path = 'Data3_Set_Imputed.xlsx'\n",
        "imputed_df.to_excel(output_path, index=False)\n",
        "print(\"ไฟล์ที่บันทึกแล้ว:\", output_path)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CIu-r3i_Pkxy",
        "outputId": "0cd8809e-a3bb-4ec0-8959-f451b8f128dc"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ไฟล์ที่บันทึกแล้ว: Data3_Set_Imputed.xlsx\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## ดาวน์โหลดไฟล์ข้อมูล"
      ],
      "metadata": {
        "id": "rPqO8faNPdXg"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('Data3_Set_Imputed.xlsx')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "DRTjd90gPmgX",
        "outputId": "05421444-3a4d-47c2-95ae-711d98e5d241"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_92a2e4f7-2bbf-4f23-b587-8dd294548737\", \"Data3_Set_Imputed.xlsx\", 8130)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}